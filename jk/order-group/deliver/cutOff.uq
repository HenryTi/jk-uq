-- 截单表
ID CutOffMain (
    id,
    KEY no,
    warehouse ID,
    cutter ID,		-- 截单人
    sys(create),
    INDEX idx_warehouse(warehouse),
);

-- ?
IX CutOffProcessing (
    ixx warehouse,
    ix CutOffType,
    xi CutOffMain
);

/* 截单扩展信息 */
IDX DxCutOffMain (
    id,						-- CutOffMain id
    staff ID,				-- 理货人
    startTime TIMESTAMP,
    finishTime TIMESTAMP
);

-- 正在处理中的理货单
IDX Talling (
    id,
);

/* 查询库房待截单数据 */
QUERY GetReadyCutOffList(
    warehouse ID,
    cutOffType ID,
)
RETURNS list (
    orderDetail ID,
	item ID,
	shouldQuantity DEC(12,2),
    customerAccount ID
) {
    INTO list SELECT b.biz as orderDetail,
        b.item, b.quantity as shouldQuantity,
        d.customerAccount
    FROM IxPendingRequest as a
        JOIN RequestDetail as b ON a.id = b.id
        JOIN Request as d ON b.main = d.id
        JOIN IxUserWarehouse as c on c.ix = $user AND c.xi = b.warehouse
    WHERE b.warehouse = warehouse and b.cutOffType = cutOffType
    ORDER BY b.warehouse, b.cutOffType, d.contact, b.biz;
};

/* 
 * 分页查询库房已截单列表
 */
QUERY GetCutOffMainList(
	warehouse ID
)
PAGE (
	id bigint start 0,
	no CHAR(20),
	cutter bigint
) {
	page SELECT a.id, a.no, a.cutter
    FROM CutOffMain AS a
    WHERE a.warehouse=warehouse AND a.cutter=$user and a.id > $pageStart
    ORDER BY a.id DESC
	limit $pageSize;
};

/* 
 * 查询待理货列表 
 */
QUERY WarehouseCutOffMain (
)
RETURNS ret (
	warehouse ID,
	cutOffMain ID,
	no CHAR(20),
	cutter ID,
	create TIMESTAMP,
	staff ID,
) {
    INTO ret SELECT b.warehouse
        , b.id as cutOffMain, b.no
        , b.cutter, b.[$create] as create, d.staff
    FROM Talling as a
        join cutOffMain as b on a.id = b.id
        join IxUserWarehouse as c on c.xi = b.warehouse
		left join DxCutOffMain as d on d.id=b.id
    WHERE c.ix = $user;
};

/* 截单操作 */
ACT CutOff(
    aWarehouse ID,
    cutOffType ID,
)
RETURNS main (
	id ID,
	no CHAR(20),			-- 截单号
) {
    -- 1、操作权限检查
    IF NOT exists(SELECT ix FROM IxUserWarehouse WHERE ix=$user AND xi = aWarehouse) {
        RETURN;
    }

    -- 2、定义变量生成截单号
    if not exists (select 1 from IxPendingRequest as a join RequestDetail as b on a.id = b.id
    where b.warehouse = aWarehouse and b.cutOffType = cutOffType) {
        RETURN; 
    }

    VAR cutOffMain ID, cutOffMainNo CHAR(20);	
	SET cutOffMainNo = NO(CutOffMain);
	SET cutOffMain = ID(CutOffMain new, cutOffMainNo);
	WITH CutOffMain as a ID = cutOffMain SET a.no = cutOffMainNo, a.warehouse = aWarehouse, a.cutter = $user;

	BUS JkDeliverBus.pickup SET cutOffMain = cutOffMain, warehouse = aWarehouse;

    -- 3、生成发运单、临时理货号, 并删除已截单的数据
    LOG 'CutOff' SUBJECT 'start';
	TABLE tblCutOff(key warehouse ID, key customerAccount ID, key contact ID, deliver ID);
	VAR trayNumber int = 1;

	WHILE 1 = 1 {
        -- 循环获取 limit1数据
		VAR requestDetail ID, warehouse ID, customerAccount ID, contact ID, biz ID, item ID, quantity dec(18, 4)
            , showPrice tinyint, json text, lotNumber char(50);
		SET warehouse = NULL;

		SET requestDetail = a.id, warehouse = b.warehouse, customerAccount = c.customerAccount, contact = c.contact
            , biz = b.biz, item = b.item, quantity = b.quantity, lotNumber = b.lotnumber
			, showPrice = b.showPrice, json = b.json
        FROM IxPendingRequest as a
            JOIN RequestDetail as b ON b.id = a.id
            JOIN Request as c ON c.id = b.main
        WHERE b.warehouse = aWarehouse and b.cutOffType = cutOffType
        ORDER BY b.warehouse, b.cutOffType, c.contact, b.biz
        LIMIT 1;

		IF warehouse IS NULL {
			BREAK;
		}

        -- 从临时表中查询是否存在，不存在则生成新发运单和临时理货号
		VAR deliverMainId ID;
		SET deliverMainId = NULL;
		SET deliverMainId = a.deliver FROM tblCutOff as a 
        WHERE a.warehouse = warehouse AND a.customerAccount = customerAccount AND a.contact = contact;

		IF deliverMainId IS NULL {
			SET deliverMainId = ID(DeliverMain new, NO(DeliverMain));
			WITH DeliverMain as a ID = deliverMainId
                SET a.customerAccount = customerAccount, a.contact = contact, a.warehouse = warehouse
                , a.cutOffMain = cutOffMain, a.trayNumber = trayNumber;

			INTO tblCutOff SELECT warehouse, customerAccount, contact, deliverMainId as deliver;
			SET trayNumber = trayNumber + 1;
		}
		VAR deliverDetailId ID = ID(DeliverDetail new);
		WITH DeliverDetail as a ID = deliverDetailId SET a.main = deliverMainId, a.biz = biz
            , a.item = item, a.quantity = quantity, a.lotNumber = lotNumber;
		-- WITH DeliverDetailOrderDetail ix = deliverDetailId xi = orderDetail;
        
		WITH DxDeliverDetail as a ID = deliverDetailId SET a.showPrice = showPrice, a.json = json;
		WITH DxDelivering as a ID = deliverMainId;
		WITH DxDeliverMain as a ID = deliverMainId SET a.rows = a.rows + 1;
		
		BUS JkDeliverBus.pickup INTO detail
			ADD biz = deliverDetailId, item = item, quantity = quantity, lotNumber = lotNumber, json = json;
            
        -- 从任务表中删除已获取到的当前数据
		DELETE a FROM IxPendingRequest as a WHERE a.id = requestDetail;
	}
	LOG 'CutOff' SUBJECT 'end';
	WITH Talling as a id = cutOffMain;
    INTO main SELECT cutOffMain as id, cutOffMainNo as no;
};

/* 获取截单表详细信息 */
QUERY GetCutOffMain(
    cutOffMain ID
)
RETURNS main (
	id Id,
	no varchar(20),
	warehouse ID,
	cutter ID,
	staff ID
)
RETURNS detail (
	deliverMain ID,
	trayNumber int,
	contact ID,
	customerAccount ID,
	carrier ID,
    waybillNumber char(50),
	deliverTime TIMESTAMP DEFAULT NULL,
	deliverDetail ID,
	item ID,
	tallyShould DEC(12,2),
	tallyDone DEC(12,2),
	tallyState TINYINT,
	lotNumber char(50),
	showPrice int,
	content text
) {
	INTO main SELECT a.id, a.no, a.warehouse, a.cutter, b.staff
		FROM CutOffMain as a
			LEFT JOIN DxCutOffMain as b ON a.id=b.id
		WHERE a.id=cutOffMain;

	INTO detail SELECT b.id as delivermain, b.trayNumber,
		b.contact, b.customerAccount, g.carrier, g.waybillNumber, g.deliverTime,
		c.id as deliverDetail, c.item, c.quantity as tallyShould, 
		f.tallyDone, f.tallyState, c.lotNumber, f.showPrice, f.json as content
		FROM CutOffMain as a
			JOIN DeliverMain as b on a.id=b.cutOffMain
			JOIN DeliverDetail as c on b.id=c.main
			JOIN DeliverDetailOrderDetail as d on d.ix=c.id
			LEFT JOIN DxDeliverDetail as f ON f.id=c.id
			LEFT JOIN DxDeliverMain as g on g.id=b.id
			JOIN OrderDetail as e ON e.id=d.xi
		WHERE a.id = cutOffMain;
};

/* 开始理货 */
ACT Tallying (
	cutOffMain ID,
) {
	WITH DxCutOffMain ID=cutOffMain SET staff=$user, startTime=$date, finishTime=null;
};

/* 单个理货完成 */
ACT TallyDoneSingle(
	deliverMain ID,
	deliverDetail ID,
	quantity DEC(12,2)
){
	WITH DxDeliverDetail as a ID = deliverDetail SET a.tallyDone = quantity, a.tallyState = 1;
	WITH DxDeliverMain as a ID = deliverMain SET a.pickRows=a.pickRows+1;
};

/* 整体理货完成 */
ACT TallyDone (
	-- warehouse ID,
	-- cutOffType ID
	cutOffMain ID,
){
	WITH DxCutOffMain ID=cutOffMain SET finishTime=$date;
	-- WITH CutOffProcessing ix=cutOffMain DEL;	-- ixx=warehouse xi=cutOffMain ix=cutOffType
	WITH Talling id = cutOffMain DEL;
};

/* 修改发货单中承运商 */
ACT UpdateDeliverCarrier(
	deliverMain ID,
	carrier ID
){
	WITH DxDeliverMain as a ID = deliverMain SET a.carrier = carrier;
};

/* 修改发货单发运单号 */
ACT UpdateWaybillNumber(
	deliverMain ID,
	carrier ID,
	waybillNumber varchar(50)
){
	WITH DxDeliverMain as a ID = deliverMain 
		SET a.carrier = carrier, a.waybillNumber = waybillNumber, a.deliverTime = $date;
};

/*
-- 查询截单类型列表
QUERY GetCutOffTypeList(
)RETURNS list (
	cutOffType ID,
	no char(50),
	customer ID,
	tradetype char(10)
) {
	INTO list SELECT a.id as cutOffType, a.no, a.customer, a.tradetype
		FROM CutOffType as a
		order by a.[$create] DESC;
};

-- 查询截单类型详情
QUERY GetCutOffType(
	cutOffType ID
) RETURNS ret (
	id ID,
	no char(50),
	customer ID,
	tradeType char(10),
	createTime datetime,
	--owner ID			-- owner报错无法使用？
)
{
	INTO ret SELECT a.id, a.no, a.customer, a.tradeType,
		a.[$create] as createTime --, a.[$owner] as owner
		FROM CutOffType as a
		WHERE a.id = cutOffType;
};
*/