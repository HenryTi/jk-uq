-- 截单表
ID CutOffMain (
    id,
    KEY no,
    warehouse ID,
    cutter ID,		-- 截单人
    sys(create),
    INDEX idx_warehouse(warehouse),
);

/* 截单扩展信息 */
IDX DxCutOffMain (
    id,						-- CutOffMain id
    staff ID,				-- 理货人
    startTime TIMESTAMP DEFAULT NULL,
    finishTime TIMESTAMP DEFAULT NULL
);

/* 查询根据库房待截单数量 */
QUERY GetReadyCutOffCount(
)
RETURNS ret (
	warehouse ID,
	readyCutOffCount int
) {
    INTO ret SELECT warehouse, COUNT(a.id) as readyCutOffCount
    FROM IxPendingRequest as a
        JOIN RequestDetail as b ON a.id = b.id
        JOIN IxUserWarehouse as c on c.xi = b.warehouse
	where c.ix = $user
	GROUP BY b.warehouse;
};

/* 查询根据库房、截单类型分组的待截单数量 */
QUERY GetCutOffTypeCount(
	warehouseId ID,
	cutofftypeId ID
)
RETURNS ret (
	warehouse ID,
	cutofftype ID,
	readyCutOffCount int
) {
    INTO ret SELECT warehouse, cutofftype, COUNT(a.id) as readyCutOffCount
    FROM IxPendingRequest as a
         JOIN RequestDetail as b ON a.id = b.id
	WHERE b.warehouse = warehouseId and b.cutOffType = cutofftypeId
	GROUP BY b.warehouse, b.cutofftype;
};

/* 查询库房、截单类型待截单数据列表 */
QUERY GetReadyCutOffList(
    warehouse ID,
    cutOffType ID,
)
PAGE(
	id bigint asc,
    orderDetail ID,
	item ID,
	shouldQuantity DEC(12,2),
    contact ID,
	json text
) {
    page SELECT a.id, b.biz as orderDetail,
        b.item, b.quantity as shouldQuantity,
        d.contact, b.json
    FROM IxPendingRequest as a
        JOIN RequestDetail as b ON a.id = b.id
        JOIN Request as d ON b.main = d.id
        JOIN IxUserWarehouse as c on c.ix = $user AND c.xi = b.warehouse
    WHERE b.warehouse = warehouse and b.cutOffType = cutOffType and a.id > $pageStart
    ORDER BY a.id asc
	limit $pageSize;
};

/* 
 * 分页查询库房已截单列表
 */
QUERY GetCutOffMainList(
	warehouse ID
)
PAGE (
	id bigint desc,
	no CHAR(20),
	cutter bigint,
	create TIMESTAMP,
	sumQuantity DEC(12,2),
	deliverDone DEC(12,2)
) {
	page SELECT id, no, cutter, [$create] as create
		, SUM(c.quantity) as sumQuantity, SUM(d.deliverdone) as deliverDone
    FROM CutOffMain AS a
		JOIN DeliverMain as b on a.id=b.cutOffMain
		JOIN DeliverDetail as c on b.id=c.main
		LEFT JOIN DxDeliverDetail as d ON d.id=c.id
    WHERE a.warehouse=warehouse AND a.cutter=$user and a.id < $pageStart
	GROUP BY a.id, a.no, a.cutter, a.[$create]
    ORDER BY id desc
	limit $pageSize;
};

/* 全部截单操作 */
ACT CutOff(
    aWarehouse ID,
    cutOffType ID,
)
RETURNS main (
	id ID,
	no CHAR(20),			-- 截单号
) {
    -- 1、操作权限检查
    IF NOT exists(SELECT ix FROM IxUserWarehouse WHERE ix=$user AND xi = aWarehouse) {
        RETURN;
    }

    -- 2、定义变量生成截单号
    if not exists (select 1 from IxPendingRequest as a join RequestDetail as b on a.id = b.id
    where b.warehouse = aWarehouse and b.cutOffType = cutOffType) {
        RETURN; 
    }

    VAR cutOffMain ID, cutOffMainNo CHAR(20);	
	SET cutOffMainNo = NO(CutOffMain);
	SET cutOffMain = ID(CutOffMain new, cutOffMainNo);
	WITH CutOffMain as a ID = cutOffMain SET a.no = cutOffMainNo, a.warehouse = aWarehouse, a.cutter = $user;

	BUS JkDeliverBus.pickup SET cutOffMain = cutOffMain, warehouse = aWarehouse;

    -- 3、生成发运单、临时理货号, 并删除已截单的数据
    LOG 'CutOff' SUBJECT 'start';
	TABLE tblCutOff(key warehouse ID, key customerAccount ID, key contact ID, deliver ID);
	VAR trayNumber int = 1;

	WHILE 1 = 1 {
        -- 循环获取 limit1数据
		VAR requestDetail ID, warehouse ID, customerAccount ID, contact ID, biz ID, item ID, quantity dec(18, 4)
            , showPrice tinyint, json text, lotNumber char(50);
		SET warehouse = NULL;

		SET requestDetail = a.id, warehouse = b.warehouse, customerAccount = c.customerAccount, contact = c.contact
            , biz = b.biz, item = b.item, quantity = b.quantity, lotNumber = b.lotnumber
			, showPrice = b.showPrice, json = b.json
        FROM IxPendingRequest as a
            JOIN RequestDetail as b ON b.id = a.id
            JOIN Request as c ON c.id = b.main
        WHERE b.warehouse = aWarehouse and b.cutOffType = cutOffType
        ORDER BY b.warehouse, b.cutOffType, c.contact, a.id
        LIMIT 1;

		IF warehouse IS NULL {
			BREAK;
		}

        -- 从临时表中查询是否存在，不存在则生成新发运单和临时理货号
		VAR deliverMainId ID;
		SET deliverMainId = NULL;
		SET deliverMainId = a.deliver FROM tblCutOff as a 
        WHERE a.warehouse = warehouse AND a.customerAccount = customerAccount AND a.contact = contact;

		IF deliverMainId IS NULL {
			SET deliverMainId = ID(DeliverMain new, NO(DeliverMain));
			WITH DeliverMain as a ID = deliverMainId
                SET a.customerAccount = customerAccount, a.contact = contact, a.warehouse = warehouse
                , a.cutOffMain = cutOffMain, a.trayNumber = trayNumber;

			INTO tblCutOff SELECT warehouse, customerAccount, contact, deliverMainId as deliver;
			SET trayNumber = trayNumber + 1;
		}
		VAR deliverDetailId ID = ID(DeliverDetail new);
		WITH DeliverDetail as a ID = deliverDetailId SET a.main = deliverMainId, a.biz = biz
            , a.item = item, a.quantity = quantity, a.lotNumber = lotNumber, a.showPrice = showPrice, a.json = json;
		-- WITH DeliverDetailOrderDetail ix = deliverDetailId xi = orderDetail;
        
		WITH DxDeliverDetail as a ID = deliverDetailId;
		WITH DxDelivering as a ID = deliverMainId;
		WITH DxDeliverMain as a ID = deliverMainId SET a.rows = a.rows + 1;
		
		-- biz是发运上游（订单明细/exchangeDetail）的id，
		-- biz2是（订单明细/exchangeDetail）的id，因为目前出库在老系统中而截单在新系统，需要暂时存储到biz2中；此字段日后要去掉；
		BUS JkDeliverBus.pickup INTO detail
			ADD biz = deliverDetailId, biz2 = biz, item = item, quantity = quantity, lotNumber = lotNumber, json = json;
            
        -- 从任务表中删除已获取到的当前数据
		DELETE a FROM IxPendingRequest as a WHERE a.id = requestDetail;
		
		-- 待截单任务太多（目前同步了一个月内数据有13000多，正常处理不会积攒这么多），增加最大托盘50，超过则跳出此次截单;
		IF (trayNumber > 50) {
			BREAK;
		}
	}
	LOG 'CutOff' SUBJECT 'end';
	WITH Talling as a id = cutOffMain;
    INTO main SELECT cutOffMain as id, cutOffMainNo as no;
	FOR (VAR user ID OF SELECT ix as user FROM IxUserWarehouse WHERE xi=aWarehouse) {
            TUID [$User] ID (user) SET poke=1;
        }
};

/* 选择截单操作(选择部分条目截单) */
ACT CutOffSelected(
    aWarehouse ID,
    cutOffType ID,
	ARR detail (
		aRequestDetail ID
	)
)
RETURNS main (
	id ID,
	no CHAR(20),			-- 截单号
) {
    -- 1、操作权限检查
    IF NOT exists(SELECT ix FROM IxUserWarehouse WHERE ix=$user AND xi = aWarehouse) {
        RETURN;
    }

    -- 2、定义变量生成截单号
    if not exists (select 1 from IxPendingRequest as a join RequestDetail as b on a.id = b.id
    where b.warehouse = aWarehouse and b.cutOffType = cutOffType) {
        RETURN; 
    }

    VAR cutOffMain ID, cutOffMainNo CHAR(20);	
	SET cutOffMainNo = NO(CutOffMain);
	SET cutOffMain = ID(CutOffMain new, cutOffMainNo);
	WITH CutOffMain as a ID = cutOffMain SET a.no = cutOffMainNo, a.warehouse = aWarehouse, a.cutter = $user;
	BUS JkDeliverBus.pickup SET cutOffMain = cutOffMain, warehouse = aWarehouse;

    -- 3、生成发运单、临时理货号, 并删除已截单的数据
    LOG 'CutOff' SUBJECT 'start';
	TABLE tblCutOff(key warehouse ID, key customerAccount ID, key contact ID, deliver ID);
	VAR trayNumber int = 1;

	FOR detail {
		-- 循环获取 limit1数据
		VAR requestDetail ID, warehouse ID, customerAccount ID, contact ID, biz ID, item ID, quantity dec(18, 4)
            , showPrice tinyint, json text, lotNumber char(50);
		SET warehouse = NULL;

		SET requestDetail = a.id, warehouse = b.warehouse, customerAccount = c.customerAccount, contact = c.contact
            , biz = b.biz, item = b.item, quantity = b.quantity, lotNumber = b.lotnumber
			, showPrice = b.showPrice, json = b.json
        FROM IxPendingRequest as a
            JOIN RequestDetail as b ON b.id = a.id
            JOIN Request as c ON c.id = b.main
        WHERE b.warehouse = aWarehouse and b.cutOffType = cutOffType and a.id = aRequestDetail;

		IF warehouse IS NULL {
			BREAK;
		}

		-- 从临时表中查询是否存在，不存在则生成新发运单和临时理货号
		VAR deliverMainId ID;
		SET deliverMainId = NULL;
		SET deliverMainId = a.deliver FROM tblCutOff as a 
        WHERE a.warehouse = warehouse AND a.customerAccount = customerAccount AND a.contact = contact;
		
		IF deliverMainId IS NULL {
			SET deliverMainId = ID(DeliverMain new, NO(DeliverMain));
			WITH DeliverMain as a ID = deliverMainId
                SET a.customerAccount = customerAccount, a.contact = contact, a.warehouse = warehouse
                , a.cutOffMain = cutOffMain, a.trayNumber = trayNumber;

			INTO tblCutOff SELECT warehouse, customerAccount, contact, deliverMainId as deliver;
			SET trayNumber = trayNumber + 1;
		}

		VAR deliverDetailId ID = ID(DeliverDetail new);
		WITH DeliverDetail as a ID = deliverDetailId SET a.main = deliverMainId, a.biz = biz
            , a.item = item, a.quantity = quantity, a.lotNumber = lotNumber, a.showPrice = showPrice, a.json = json;

		WITH DxDeliverDetail as a ID = deliverDetailId;
		WITH DxDelivering as a ID = deliverMainId;
		WITH DxDeliverMain as a ID = deliverMainId SET a.rows = a.rows + 1;

		-- biz是发运上游（订单明细/exchangeDetail）的id，
		-- biz2是（订单明细/exchangeDetail）的id，因为目前出库在老系统中而截单在新系统，需要暂时存储到biz2中；此字段日后要去掉；
		BUS JkDeliverBus.pickup INTO detail
			ADD biz = deliverDetailId, biz2 = biz, item = item, quantity = quantity, lotNumber = lotNumber, json = json;
            
        -- 从任务表中删除已获取到的当前数据
		DELETE a FROM IxPendingRequest as a WHERE a.id = requestDetail;
	}
	LOG 'CutOff' SUBJECT 'end';
	WITH Talling as a id = cutOffMain;
    INTO main SELECT cutOffMain as id, cutOffMainNo as no;
	FOR (VAR user ID OF SELECT ix as user FROM IxUserWarehouse WHERE xi=aWarehouse) {
            TUID [$User] ID (user) SET poke=1;
        }
};

/* 获取截单表详细信息 */
QUERY GetCutOffMain(
    cutOffMain ID
)
RETURNS main (
	id Id,
	no varchar(20),
	warehouse ID,
	cutter ID,
	staff ID,
	finishTime TIMESTAMP
)
RETURNS detail (
	deliverMain ID,
	trayNumber int,
	contact ID,
	customerAccount ID,
	carrier ID,
    waybillNumber char(50),
	deliverTime TIMESTAMP DEFAULT NULL,
	deliverDetail ID,
	item ID,
	tallyShould DEC(12,2),
	tallyDone DEC(12,2),
	tallyState TINYINT,
	lotNumber char(50),
	showPrice int,
	content text
) {
	INTO main SELECT a.id, a.no, a.warehouse, a.cutter, b.staff, b.finishTime
		FROM CutOffMain as a
			LEFT JOIN DxCutOffMain as b ON a.id=b.id
		WHERE a.id=cutOffMain;

	INTO detail SELECT b.id as delivermain, b.trayNumber,
		b.contact, b.customerAccount, e.carrier, e.waybillNumber, e.deliverTime,
		c.id as deliverDetail, c.item, c.quantity as tallyShould,
		d.tallyDone, d.tallyState, c.lotNumber, c.showPrice, c.json as content
		FROM CutOffMain as a
			JOIN DeliverMain as b on a.id=b.cutOffMain
			JOIN DeliverDetail as c on b.id=c.main
			LEFT JOIN DxDeliverDetail as d ON d.id=c.id
			LEFT JOIN DxDeliverMain as e on e.id=b.id
		WHERE a.id = cutOffMain;
};

/* 修改发货单中承运商 */
ACT UpdateDeliverCarrier(
	deliverMain ID,
	carrier ID
){
	WITH DxDeliverMain as a ID = deliverMain SET a.carrier = carrier;
	-- 发bus：truck
};

/* 修改发货单发运单号 */
ACT UpdateWaybillNumber(
	deliverMain ID,
	carrier ID,
	waybillNumber varchar(50)
){
	WITH DxDeliverMain as a ID = deliverMain 
		SET a.carrier = carrier, a.waybillNumber = waybillNumber;
};