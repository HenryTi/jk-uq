-- 截单表
ID CutOffMain (
    id,
    KEY no,
    warehouse ID,
    cutter ID,		-- 截单人
    sys(create),
    INDEX idx_warehouse(warehouse),
);

-- 正在处理中的截单
IX CutOffProcessing (
    ixx warehouse,
    ix CutOffType,
    xi CutOffMain
);

/* 截单扩展信息 */
IDX DxCutOffMain (
    id,						-- CutOffMain id
    staff ID,				-- 理货人
    startTime TIMESTAMP,
    finishTime TIMESTAMP
);

/* 查询库房待截单数据 */
QUERY GetReadyCutOffList(
    warehouse ID,
    cutOffType ID,
)
RETURNS list (
    orderDetail ID,
	product ID,
	item ID,
	shouldQuantity DEC(12,2),
    customerAccount ID
) {
    INTO list SELECT a.xi as orderDetail,
        b.product, b.item, b.quantity as shouldQuantity,
        a.ix as customerAccount
    FROM IxPendingDeliver as a
        JOIN OrderDetail as b ON a.xi = b.id
        JOIN IxUserWarehouse as c on c.ix = $user AND c.xi = a.ixx
        JOIN OrderMain as d ON b.main = d.id
    WHERE a.ixx = warehouse and a.ix = cutOffType
    ORDER BY a.ixx, a.ix, d.contact, a.xi;
};

/* 
 * 查询库房已截单列表 
 * TODO: 这个不能这样查询，如果是查询全部要分页
 */
QUERY GetCutOffMainList(
	warehouse ID
)
PAGE (
	id bigint start 0,
	no CHAR(20),
	cutter bigint
) {
	page SELECT a.id, a.no, a.cutter
    FROM CutOffMain AS a
    WHERE a.warehouse=warehouse AND a.cutter=$user and a.id > $pageStart
    ORDER BY a.id DESC
	limit $pageSize;
};

/* 
 * 查询待理货列表 
 */
QUERY WarehouseCutOffMain (
)
RETURNS ret (
	warehouse ID,
	cutOffMain ID,
	no CHAR(20),
	cutter ID,
	create TIMESTAMP,
	staff ID,
) {
    INTO ret SELECT b.warehouse
        , b.id as cutOffMain, b.no
        , b.cutter, b.[$create] as create, c.ix as staff
    FROM    CutOffProcessing as a
        join cutOffMain as b on a.xi = b.id
        join IxUserWarehouse as c on c.xi = b.warehouse
    WHERE c.ix = $user;
};

/* 截单操作
 * 下一步要完善考虑根据不同业务类型的截单：例如：客户订单截单、河北质检截单...
 */
ACT CutOff(
    aWarehouse ID,
    cutOffType ID,
)
RETURNS main (
	id ID,
	no CHAR(20),			-- 截单号
) {
    -- 1、操作权限检查
    IF NOT exists(SELECT ix FROM IxUserWarehouse WHERE ix=$user AND xi = aWarehouse) {
        RETURN;
    }

    -- 2、生成截单号
    VAR cutOffMain ID;
	var cutOffMainNo CHAR(20);

    -- 3、生成发运单、临时理货号, 并删除已截单的数据
    LOG 'CutOff' SUBJECT 'start';
	TABLE tblCutOff(key warehouse ID, key customerAccount ID, key contact ID, deliver ID);
	VAR trayNumber int;
    SET trayNumber = 1;

	WHILE 1 = 1 {
        -- 循环获取 limit1数据
		VAR warehouse ID, customerAccount ID, contact ID, orderDetail ID, quantity dec(18, 4);
		SET warehouse=NULL;
		SET warehouse = a.ixx, customerAccount=a.ix, contact=c.contact, orderDetail=a.xi
        FROM IxPendingDeliver as a
            JOIN OrderDetail as b ON b.id = a.xi
            JOIN OrderMain as c ON c.id = b.main
        WHERE a.ixx = aWarehouse and a.ix = cutOffType
        ORDER BY a.ixx, a.ix, c.contact, a.xi
        LIMIT 1;

		IF warehouse IS NULL {
			BREAK;
		}

        if cutOffMain is null {
            SET cutOffMainNo = NO(CutOffMain);
            SET cutOffMain = ID(CutOffMain new, cutOffMainNo);
            WITH CutOffMain as a ID = cutOffMain SET a.no = cutOffMainNo, a.warehouse = warehouse, a.cutter = $user;
        }
        
        -- 从任务表中删除已获取到的当前数据
		DELETE a FROM IxPendingDeliver as a
        WHERE a.ixx=warehouse AND a.ix=customerAccount AND a.xi=orderDetail;

        -- 从临时表中查询是否存在，不存在则生成新发运单和临时理货号
		VAR deliver ID, deliverNo CHAR(20);
		SET deliver = NULL;
		SET deliver = a.deliver FROM tblCutOff as a 
        WHERE a.warehouse = warehouse AND a.customerAccount = customerAccount AND a.contact = contact;

		IF deliver IS NULL {
			SET deliverNo = NO(DeliverMain);
			SET deliver = ID(DeliverMain new, deliverNo);
			WITH DeliverMain as a ID = deliver 
                SET a.customer = customerAccount, a.contact=contact, a.warehouse=warehouse
                , a.cutOffMain = cutOffMain, a.trayNumber = trayNumber;

			INTO tblCutOff SELECT warehouse, customerAccount, contact, deliver;

			SET trayNumber = trayNumber + 1;
		}
		WITH DeliverDetail ID = orderDetail SET main = deliver, quantity = quantity;
		WITH DxDeliverMain as a ID = deliver SET a.rows = a.rows + 1;
	}
	LOG 'CutOff' SUBJECT 'end';
	WITH CutOffProcessing ixx = aWarehouse ix = cutOffType xi = cutOffMain;
    INTO main SELECT cutOffMain as id, cutOffMainNo as no;
};

/* 获取截单表详细信息 */
QUERY GetCutOffMain(
    cutOffMain ID
)
RETURNS main (
	id Id,
	no varchar(20),
	warehouse ID,
	cutter ID,
	staff ID
)
RETURNS detail (
	delivermain ID,
	trayNumber int,
	contact ID,
	customer ID,
	carrier ID,
    waybillNumber char(50),
	deliverTime TIMESTAMP DEFAULT NULL,
	deliverDetail ID,
	item ID,
	product ID,
	tallyShould DEC(12,2),
	price DEC(12,2),
	lotNumber char(50),
	content text
) {
	INTO main SELECT a.id, a.no, a.warehouse, a.cutter, b.staff
		FROM CutOffMain as a
			LEFT JOIN DxCutOffMain as b ON a.id=b.id
		WHERE a.id=cutOffMain;

	INTO detail SELECT b.id as delivermain, b.trayNumber,
		b.contact, b.customer, f.carrier, f.waybillNumber, f.deliverTime,
		c.id as deliverDetail, d.item, d.product, e.pickDone as tallyShould, 
		d.price, d.lotNumber, e.json as content
		FROM CutOffMain as a
			JOIN DeliverMain as b on a.id=b.cutOffMain
			JOIN DeliverDetail as c on b.id=c.main
			JOIN OrderDetail as d ON c.id=d.id
			LEFT JOIN DxDeliverDetail as e ON d.id=e.id
			LEFT JOIN DxDeliverMain as f on f.id=b.id
		WHERE a.id=cutOffMain;
};

/* 开始理货 */
ACT Tallying (
	cutOffMain ID,
) {
	WITH DxCutOffMain ID=cutOffMain SET staff=$user,startTime=$date;
};

/* 理货完成 */
ACT Tallied (
	cutOffMain ID,
	-- 实际理货数量
	ARR detail (
		orderDetail ID,
		quantity DEC(12,2)
	)
) {
    WITH DxCutOffMain ID=cutOffMain SET finishTime=$date;
};

/*
-- 查询截单类型列表
QUERY GetCutOffTypeList(
)RETURNS list (
	cutOffType ID,
	no char(50),
	customer ID,
	tradetype char(10)
) {
	INTO list SELECT a.id as cutOffType, a.no, a.customer, a.tradetype
		FROM CutOffType as a
		order by a.[$create] DESC;
};

-- 查询截单类型详情
QUERY GetCutOffType(
	cutOffType ID
) RETURNS ret (
	id ID,
	no char(50),
	customer ID,
	tradeType char(10),
	createTime datetime,
	--owner ID			-- owner报错无法使用？
)
{
	INTO ret SELECT a.id, a.no, a.customer, a.tradeType,
		a.[$create] as createTime --, a.[$owner] as owner
		FROM CutOffType as a
		WHERE a.id = cutOffType;
};
*/