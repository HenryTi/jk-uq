ID Warehouse (
	id,
	KEY name CHAR(20),
);

ID DeliverMain GLOBAL(
    id,
    KEY no,
    customer ID,
    contact ID,
	warehouse ID,
	cutOffMain ID,          -- 这两个字段放在这儿不对，应该用单独的IX
	trayNumber int,
	sys(create),
);

IDX DxDeliverMain (
    id,										-- deliver main id
    rows SMALLINT DEFAULT 0,				-- Deliver中包含的DeliverDetail个数
    pickRows SMALLINT DEFAULT 0,			-- 已拣货行数
    carrier ID,                             -- 承运方
    waybillNumber char(50),                 -- 运单号
    deliverTime TIMESTAMP DEFAULT NULL,		-- 发运时间,
	staff ID,								-- 发运人
	startTime TIMESTAMP,					-- 任务领用时间
	finishTime TIMESTAMP					-- 任务结束时间
);

/*
*/
ID DeliverDetail GLOBAL(
    id,                     -- 
    main ID DeliverMain,    -- DeliverMain id	
    quantity dec(18, 4),
);

IDX DxDeliverDetail (
    id,
	deliverDone DEC(12,2) DEFAULT 0,		-- 已发
    pickDone dec(12, 2) DEFAULT 0 SUM, 
	tallyDone dec(12, 2) DEFAULT 0,			-- 已理
	tallyState TINYINT DEFAULT 0,			-- 理货状态：0 未完成，1已完成;
	deliverReturn DEC(12,2) SUM,			-- 应退货
    returnDone dec(12, 2) DEFAULT 0,
	-- 此次发货的特殊要求保存在此处
	showPrice tinyint,
	json text
);

-- 处理中的发货单
IDX DxDelivering (
    id,
);

IX IxUserWarehouse (
	ix User,
	xi Warehouse,
);

IX IxPendingDeliver (
    ixx Warehouse,
    ix cutOffType,
    xi OrderDetail,
    quantity dec(18, 4),
    -- 其实要加上此次发货的特殊要求，即deliver-ext的内容
	showPrice tinyint,
	json text
);

ACT Delivering (
	deliver ID,
) {
	WITH DxDeliverMain ID=deliver SET staff=$user, startTime=$date;
};

ACT Delivered(
	deliver ID,
){
	WITH DxDelivering ID=deliver DEL;
	WITH DxDeliverMain ID=deliver SET finishTime=$date;
};

QUERY WarehousePendingDeliver(
)
RETURNS ret (
	warehouse ID,
	rowCount DEC(12,2),
) {
	INTO ret SELECT warehouse, count(b.xi) as rowCount
		FROM IxUserWarehouse as a
			JOIN IxPendingDeliver as b on a.xi=b.ixx
		WHERE a.ix=$user
		GROUP BY b.ixx as warehouse;
};

QUERY WarehouseDeliverMain (
)
RETURNS ret (
	warehouse ID,
	deliverMain ID,
	no CHAR(20),
	customer ID,
	create TIMESTAMP,
	rows SMALLINT,
	pickRows SMALLINT,
	staff ID,
) {
	INTO ret SELECT b.warehouse
		, b.id as deliverMain, b.no
		, b.customer, b.[$create] as create, d.rows, d.pickRows, d.staff
		FROM IxUserWarehouse as a
			JOIN DeliverMain as b ON a.xi=b.warehouse
			JOIN DxDelivering as c on c.id=b.id
			LEFT JOIN DxDeliverMain as d ON b.id=d.id
		WHERE a.ix=$user;
};

QUERY CustomerPendingDeliver(
	warehouse ID,
	customer ID,
)
RETURNS ret (
	orderDetail ID,
	item ID,
	product ID,
	quantity DEC(12,2),
	amount DEC(12,2),
	price DEC(12,2),
	deliverShould DEC(12,2),			-- 请发
) {
	INTO ret SELECT b.id as orderDetail
		, b.item, b.product, b.quantity, b.amount, b.price
		, a.quantity as deliverShould
		FROM IxPendingDeliver as a
			JOIN OrderDetail as b on a.xi=b.id
			-- JOIN IxUserWarehouse as d on d.ix=$user AND d.xi=a.ixx
		WHERE a.ixx=warehouse AND a.ix=customer;
};

/*
 1. DeliverDetail设置单独主键（不再把orderDetail作为其主键），增加orderDetail + quantity;
 2. AutoWarehouseDeliver可能不定时运行，改成手动运行，表示是一次截单；
 3. 截单后，形成：
    3.1 发货单（运单、收货回执），按照客户 + 收货地址区分，明细是：orderDetail + quantity;
    3.2 拣货单，明细是 orderDetail + quantity + 货位；
    3.3 理货单，明细是：orderDetail + quantity + 托盘号；
*/
ACT AutoWarehouseDeliver()
{
	-- 生成发运单
	LOG 'AutoWarehouseDeliver' SUBJECT 'start';
	TABLE tblWarehouseDeliver(key warehouse ID, key customer ID, deliver ID);
	WHILE 1=1 {
		VAR warehouse ID, customer ID, orderDetail ID;
		SET warehouse=NULL;
		SET warehouse=a.ixx, customer=a.ix, orderDetail=a.xi
			FROM IxPendingDeliver as a
			ORDER BY a.ixx, a.ix, a.xi
			LIMIT 1;
		IF warehouse IS NULL {
			BREAK;
		}
		DELETE a FROM IxPendingDeliver as a 
			WHERE a.ixx=warehouse AND a.ix=customer AND a.xi=orderDetail;

		VAR deliver ID, deliverNo CHAR(20);
		SET deliver=NULL;
		SET deliver=a.deliver FROM tblWarehouseDeliver as a 
			WHERE a.warehouse=warehouse AND a.customer=customer;
		IF deliver IS NULL {
			SET deliverNo=NO(DeliverMain);
			SET deliver=ID(DeliverMain new, deliverNo);
			WITH DeliverMain as a ID=deliver SET a.customer=customer, a.warehouse=warehouse;
			INTO tblWarehouseDeliver SELECT warehouse, customer, deliver;
			-- 对于有增1的字段，必须用下一句，保证这一行在表中存在
			WITH DxDeliverMain as a ID=deliver;
		}
		WITH DeliverDetail ID=orderDetail SET main=deliver;
		WITH DxDeliverMain as a ID=deliver SET a.rows=a.rows+1;
	}
	LOG 'AutoWarehouseDeliver' SUBJECT 'end';
};

QUERY GetDeliver (
	deliver ID
)
RETURNS main (
	id ID,	--# [DeliverMain],
	no varchar(20),
	customer ID,
	contact ID,
	warehouse ID,
	staff ID,
	rows SMALLINT DEFAULT 0,
	pickRows SMALLINT DEFAULT 0,
	deliverTime TIMESTAMP DEFAULT NULL
)
RETURNS detail (
	id ID,	--# [DeliverDetail],
	delivermain ID,
	item ID,
	product ID,
	deliverShould DEC(12,2),
	pickDone DEC(12,2),
	deliverDone DEC(12,2),
	returnDone DEC(12,2)
) {
	INTO main SELECT a.id, 
		a.no, a.customer, a.contact, a.warehouse,
		b.staff, b.rows, b.pickRows, b.deliverTime 
		FROM DeliverMain as a
			LEFT JOIN DxDeliverMain as b ON a.id=b.id
		WHERE a.id=deliver;
	INTO detail SELECT a.id,
		a.main as delivermain,			-- DeliverMain id
		c.item, c.product,
		a.quantity as deliverShould, d.pickDone, d.deliverDone, d.returnDone 
		FROM DeliverDetail as a 
			JOIN DeliverDetailOrderDetail as b on b.ix=a.id
			JOIN OrderDetail as c ON c.id = b.xi
			LEFT JOIN DxDeliverDetail as d ON a.id = c.id
		WHERE a.main = deliver;
};
