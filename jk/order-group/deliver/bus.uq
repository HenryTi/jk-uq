BUS JkOrderBus from 百灵威系统工程部/[jk-order]
ACCEPT order {
	VAR mainId ID;
	SET mainId = id;
	WITH OrderMain as a ID=id SET a.no=no, a.customer=customerAccount;
	FOR detail {
		WITH OrderDetail as a 
			ID = id
			SET a.main=mainId
				, a.item=item, a.product=product
				, a.quantity=quantity, a.amount=amount, a.price=price;
	}
}
/*
 1. bus deliver的detail里面有 orderDetail + quantity;
 2. 此处接收deliver后， orderDetail和quantity都写入IxPendingDeliver（IxPendingDeliver中要添加quantity);
 3. OrderDetail中有一个warehouse是什么意思？好像OrderMain/OrderDetail应该只作为order中对应表的本地备份；
 4. DxOrderDetail不明白是干什么；
 5. AutoWarehouseDeliver 考虑改成手动“截单”，截单后生成“发运单”和“拣货单”、“理货单”
*/
ACCEPT deliver {
	VAR customer ID;
	SET customer = a.customer FROM OrderMain as a WHERE a.id=id;
	
	WITH OrderMain as a ID=id SET a.contact=contact;
	FOR detail {
		VAR deliverQuantity DEC(12,2);
		WITH OrderDetail as a ID=id SET a.warehouse=warehouse;
		SET deliverQuantity = a.quantity FROM OrderDetail as a WHERE a.id=id;
		
		-- todo:接收bus时候保存cutOffType（截单类型）,
		-- IX表目前保存无法超过3列。可考虑取消掉此表中的customer替换为cutOffType，orderMain中已存在customer
		WITH IxPendingDeliver ixx=warehouse ix=customer xi=id;
		WITH DxOrderDetail as a ID=id SET a.deliverShould=deliverQuantity;
		FOR (VAR user ID OF SELECT ix as user FROM IxUserWarehouse WHERE xi=warehouse) {
			TUID [$User] ID (user) SET poke=1;
		}
	}
}
ACCEPT [deliver-ext] {
	FOR detail {
		WITH OrderDetailX as a ID=id SET a.needInsuredWhenDelivery = needInsuredWhenDelivery,
		     a.showPrice = showPrice, a.lotNumber = lotNumber, a.json = json;
	}
}
ACCEPT [pickup-done] {
	FOR detail {
		VAR main INT;
		SET main=a.main FROM DeliverDetail as a WHERE a.id=id;
		WITH DxOrderDetail as a ID=id SET a.pickDone=value;
		WITH DxDeliverMain as a ID=main SET a.pickRows=a.pickRows+1;
	}
}
ACCEPT [return] {
	VAR customer ID;
	SET customer = a.customer FROM OrderMain as a WHERE a.id=id;
	FOR detail {
		VAR deliverShould DEC(12,2), deliverReturn DEC(12,2), deliverDone DEC(12,2)
			, returnDone DEC(12,2), retQuantity DEC(12,2)
			, warehouse ID;
		SET deliverShould=a.deliverShould
			, deliverDone=a.deliverDone
			, deliverReturn=a.deliverReturn
			, returnDone=a.returnDone
			FROM DxOrderDetail as a WHERE a.id=[order-detail-id];
		SET warehouse=a.warehouse FROM OrderDetail as a WHERE a.id=[order-detail-id];
		SET retQuantity = quantity;
		WITH DxOrderDetail ID=id SET deliverReturn=retQuantity;
		-- 做return相关操作
		IF exists(SELECT xi FROM IxPendingDeliver WHERE ixx=warehouse AND ix=customer AND xi=[order-detail-id]) {
			IF deliverShould - deliverReturn - retQuantity <= 0 {
				WITH IxPendingDeliver IXX=warehouse IX=customer XI=[order-detail-id] 
					DEL WHERE deliverShould - deliverReturn - retQuantity <= 0;
			}
		}
	}
};
