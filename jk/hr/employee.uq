OPEN TUID employee (
    id,
    no char(20) not null,
    main name char(30) not null,
    firstName char(20),
    lastName char(20),
    title char(20),
    Status char(2),
    CreateTime datetime,
    unique(no),
    search(name),
);

--岗位/角色表
OPEN TUID Role (
    id,
    main no char(50) not null,
    main name char(50) not null,
    note char(200),
    IsValid smallint not null default 1,
    CreateTime datetime,
    unique(no),
    search(name),
);

--员工与角色的关系表
OPEN MAP EmployeeRole (
    key employee ID employee,
    key role ID Role,
    StartTime datetime,  --开始时间
    EndTime datetime,    --结束时间
);

--员工和内部关联关系
OPEN MAP WebuserEmployee( 
    key webuser ID [$user], --负责人
    key employee ID employee
);

OPEN MAP EmployeeRelation (
    key parent ID employee,
    key child ID employee
);

/** 搜索员工*/
QUERY SearchEmployee(key char(100))
PAGE (
    id bigint start 0,
    no char(20) not null,
    name char(30) not null,
    firstName char(20),
    lastName char(20),
    title char(20),
    Status char(2),
    CreateTime datetime,
    webuser ID [$user],
    employee ID Employee
) {
    var key2 char(102);
    set key2 = concat('%', key, '%');

    PAGE select e.id, e.no, e.name, e.firstName, e.lastName, e.title, e.Status, e.CreateTime, w.webuser,w.employee
    from    employee as e
            join WebuserEmployee as w on e.id = w.employee
    where   e.id > $pageStart and (e.title like key2 or e.name like key2 )
    order by e.id
    limit $pageSize;
};

 
/** 搜索员工名称*/
QUERY SearchEmployeeByid(
    _id ID [$user]
)
returns ret (
    id ID employee,
    name char(30),
    firstName char(20),
    lastName char(20),
    title char(20),
   
) {
    into ret select e.id, e.name, e.firstName, e.lastName, e.title
    from    WebuserEmployee as w
            join employee as e on w.employee = e.id
    where   w.webuser = _id;
};

/** 搜索员工*/
QUERY SearchTeam(key char(100))
PAGE (
    id bigint start 0,
    webuser ID [$user],
    employee ID Employee
) {
    PAGE select a.webuser as id, c.webuser, c.employee
    from    WebuserEmployee as a 
            join EmployeeRelation as b on a.employee = b.parent
            join WebuserEmployee as c on b.child = c.employee
    where  a.webuser = $user and a.webuser > $pageStart
    limit $pageSize;
};