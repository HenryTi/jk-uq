TUID Warehouse (
    id,
    no char(10) not null,
    main name char(50) not null,
    search(name),
    unique(name),
);

BOOK ProductInventory (
    key warehouse ID Warehouse,
    key product ID Product,
    key pack ID Product.Pack,
    quantity int not null,
);

Map SalesRegionWarehouse (
    key salesRegion ID SalesRegion,
    key warehouse ID Warehouse,
    minDeliveryDays int,
    maxDeliveryDays int,
    deliveryTimeDescription char(100),
    order,
);

/*
query a() {
    var sum dec(10,2) = 0;
    set sum = 0;
    foreach (var a int, b dec(3,2)
        of select 1, 2 from aa as a join bb as b on a.id = b.d)
    {
        set sum = sum+a;
    }

};
*/

Query GetInventoryAllocation(product ID Product, pack ID Product.Pack, salesRegion ID SalesRegion)
returns ret(
    product ID Product,
    pack ID product.Pack,
    salesRegion ID SalesRegion,
    warehouse ID Warehouse,
    quantity int,
    minDeliveryDays int,
    maxDeliveryDays int,
    deliveryTimeDescription char(100)
){
    into ret select pi.product, pi.pack, srw.salesRegion, pi.warehouse, pi.quantity, srw.minDeliveryDays, srw.maxDeliveryDays
            , srw.deliveryTimeDescription
    from    ProductInventory as pi
            join warehouse as w on w.id = pi.warehouse
            join salesRegionWarehouse as srw on srw.warehouse = w.id
    where   pi.product = product
            and pi.pack = pack
            and srw.salesRegion = salesRegion
    -- order by srw.order
};

TUID ShippingArea(
    id,
    main name char(20) not null,
    search (name),
    unique (name),
);

Map ShippingAreaInclusionProvince (
    key shippingArea ID ShippingArea,
    key province ID Province,
);

Map ShippingAreaInclusionCity (
    key shippingArea ID ShippingArea,
    key city ID City,
);
