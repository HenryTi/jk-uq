/*
query a() {
    var sum dec(12,2) = 0;
    set sum = 0;
    foreach (var a int, b dec(12,2)
        of select 1, 2 from aa as a join bb as b on a.id = b.d)
    {
        set sum = sum+a;
    }

};
*/

Query GetInventoryAllocation(product ID ProductX, pack OF product.PackX, salesRegion ID SalesRegion)
returns ret(
    product ID ProductX,
    pack OF product.PackX,
    salesRegion ID SalesRegion,
    warehouse ID Warehouse,
    quantity int,
    minDeliveryDays int,
    maxDeliveryDays int,
    deliveryTimeDescription char(100)
){
    into ret select pi.product, pi.pack, srw.salesRegion, pi.warehouse, pi.quantity, srw.minDeliveryDays, srw.maxDeliveryDays
            , srw.deliveryTimeDescription
    from    ProductInventory as pi
            join warehouse as w on w.id = pi.warehouse
            join salesRegionWarehouse as srw on srw.warehouse = w.id
    where   pi.product = product
            and pi.pack = pack
            and srw.salesRegion = salesRegion
    order by srw.sequence;
};

/*
 *
*/
Query GetShippingPlan (product ID ProductX, pack OF product.PackX, city ID City, quantity int)
returns ret(
    product ID ProductX,
    pack OF product.PackX,
    warehouse ID Warehouse,
    quantity int
){
    var qty int;
    set qty = quantity;

    foreach ( var product1 bigint, pack1 bigint, warehouse bigint, warehouseQuantity int of
    select pi.product as product1, pi.pack as pack1, pi.warehouse, pi.quantity as warehouseQuantity
    from    ProductInventory as pi
            join warehouse as w on w.id = pi.warehouse
            join WarehouseSupportCity as wsc on w.id = wsc.warehouse
    where   pi.product = product
            and pi.pack = pack
            and wsc.city = city
    order by wsc.sequence) {
        if (qty > warehouseQuantity) {
            into ret select product1 as product, pack1 as pack, warehouse, warehouseQuantity as quantity;
            set qty = qty - warehouseQuantity;
        }else{
            into ret select product1 as product, pack1 as pack, warehouse, qty as quantity;
        }
        if (qty > 0)
            into ret select product1 as product, pack1 as pack, null as warehouse, qty as quantity;
    }
};

/*
ACTION getFreight(
    Arr orderItem (
        product ID Product,
        pack ID product.pack,
        quantity int,
    ),
    contact ID Contact,
    salesRegion ID SalesRegion
)
returns freight(
    value dec(12,2)
)
{
    if not exists(select id from SalesRegion where id = salesRegion and name = 'CN')
        return 0 as value;
    foreach orderItems {
        var brandId ID;
        set brandId = p.brand from Product as p where p.id = product;
        if exists(select id from Brand where id = brandId and name in ('', '')){
            break;
        }
    }
};
*/

/*
 * 查询有效库房列表
*/
QUERY GetValidWarehouseList()
returns ret(
    id bigint,
    name char(50),
    no char(10)
) {
    Into ret select w.id, w.name, w.no
    from  Warehouse as w
    where w.isValid = 1
    order by w.id asc;
};

/*
 * 查询库房列表
*/
QUERY SearchWarehouseByKey(key char(50))
returns ret(
    id bigint,
    name char(50),
    no char(10)
) {
    var key2 char(52);
    set key2 = concat('%', key, '%');

    Into ret select w.id, w.name, w.no 
    from  Warehouse as w
    where (key is null or w.name like key2)
            and w.isValid = 1
    order by w.id asc;
};

/*
-- 查询库区列表 (取消库区层面概念作废)
QUERY SearchWarehouseBuilding(warehouse ID Warehouse, key char(50))
returns ret(
   id bigint,
   name char(50),
   no char(10),
   warehouse bigint,
   isValid int

) {
    var key2 char(52);
    set key2 = concat('%', key, '%');

    Into ret select b.id, b.name, b.no, b.warehouse, b.isValid
    from    WarehouseBuilding as b
    where   b.warehouse = warehouse and (key is null or b.name like key2)
    order by b.id asc;
};
*/

/*
 * 查询房间列表
*/
QUERY SearchWarehouseRoom(warehouse ID Warehouse, key char(50))
returns ret(
   id bigint,
   no char(10),
   name char(50),
   warehouse bigint,
   isValid int
) {
    var key2 char(52);
    set key2 = concat('%', key, '%');

    Into ret select r.id, r.no, r.name, r.warehouse, r.isValid
    from    WarehouseRoom as r
    where   r.warehouse = warehouse and (key is null or r.name like key2)
    order by r.id asc;
};

/*
 * 查询货架组列表
*/
QUERY SearchShelf(warehouseRoom ID WarehouseRoom, key char(50))
returns ret(
   id bigint,
   no char(10),
   name char(50),
   warehouseRoom int,
   isValid int
) {
    var key2 char(52);
    set key2 = concat('%', key, '%');

    Into ret select s.id, s.no, s.name, s.warehouseRoom, s.isValid
    from    Shelf as s
    where   s.warehouseRoom = warehouseRoom and (key is null or s.name like key2)
    order by s.id asc;
};

/*
 * 查询货架层列表
*/
QUERY SearchShelfLayer(shelf ID Shelf, key char(50))
returns ret(
   id bigint,
   no char(10),
   name char(50),
   shelf bigint,
   isValid int
) {
    var key2 char(52);
    set key2 = concat('%', key, '%');

    Into ret select l.id, l.no, l.name, l.shelf, l.isValid
    from    ShelfLayer as l
    where   l.shelf = shelf and (key is null or l.name like key2)
    order by l.id asc;
};

/*
 * 查询货位列表
*/
QUERY SearchShelfBlock(shelfLayer ID ShelfLayer, key char(50))
returns ret(
   id bigint,
   no char(10),
   name char(50),
   shelfLayer bigint
) {
    var key2 char(52);
    set key2 = concat('%', key, '%');
    
    Into ret select b.id, b.no, b.name, b.shelfLayer
    from    ShelfBlock as b
    where   b.shelfLayer = shelfLayer and (key is null or b.name like key2)
    order by b.id asc;
};

-- 获取发运方式列表
QUERY GetExpressLogisticsList()
returns ret(
    id ID,
    name char(50)
){
    Into ret select a.id, a.name
    from    ExpressLogistics as a
    where   a.isvalid = 1;
};

-- 获取出入库原因列表
Query GetOutInBoundReasonList()
returns list(
    id ID,
    name char(100)
){
    Into list select a.id, a.name
    from    OutInBoundReason as a
    where   a.no like 'B%';
};