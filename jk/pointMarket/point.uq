OPEN TUID Genre (
    id,
    main name char(50) not null,
    main imageUrl char(500),
    search (name),
);

MAP PointProductGenre(
    key genre ID Genre not null,
    key pointProduct ID PointProductLib not null,
);

-- 可兑换产品库
TUID PointProductLib (
    id,
    main description char(1000),
    main descriptionC char(1000),
    main grade char(1000), 
    main point int,                                  --所需积分
    startDate date,                             --生效时间
    endDate date,                               --过期时间
    main imageUrl char(500),                         --产品图片
    isValid tinyint not null default 1,
    search (description, descriptionC),
);

-- 积分兑换产品和 其来源的映射关系（1.来自营销产品库；2.来自第三方等）
MAP PointProductSource (
    key pointProduct ID PointProductLib,
    key sourceId char(50),
    type char(8) not null,  -- selfsales, jd.com
);

MAP PointProductDetail (
    key pointProduct ID PointProductLib,
    content text,
);

--可兑换产品表
MAP PointProduct (
    key product ID ProductX not null,           --产品编号
    key pack OF product.PackX not null,         --包装编号
    point int,                                  --所需积分
    startDate date,                             --生效时间
    endDate date,                               --过期时间
    imageUrl char(500),                         --产品图片
    index idx_date,
);

--积分明细表
BOOK PointBook (
    key webUser ID [$user],                 -- 是webuser
    key pointYear int not null,             -- 积分所在年度
    point int not null default 0,           -- 总有效积分
    usedPoint int default 0,                -- 消耗的积分
    totalPoint int not null default 0,      -- 总积分
    tempPoint int not null default 0,       -- 在tonva订单系统产生的临时积分（当此积分同步到内部系统，再从内部系统同步回来时，会并入totalPoint内，此积分清零)
    tempUsedPoint int not null default 0,   -- 在tonva系统消耗的临时积分（当此积分同步到内部系统，再从内部系统同步回来时，会并入usedPoint内，此积分清零), 2020-10-16, ligsh, 不再使用此字段
    tempSignInPoint int not null default 0  -- 签到产生的积分，该积分和tempPoint的区别是，它是有效积分，该积分也需要同步到内部系统，从内部系统同步回来时，并入到totalPoint和point中，此积分清零, 2020-10-16, ligsh, 不再使用此字段
);

--积分明细（备份，当审核通过时吧这个积分记录复制到 PointBook ）
BOOK PointBookByCustomer (
    key customer ID Customer,   -- 客户编号，不是webuser
    key pointYear int not null,             -- 积分所在年度
    point int not null default 0,           -- 总有效积分
    usedPoint int default 0,                -- 消耗的积分
    totalPoint int not null default 0      -- 总积分
);

--积分变化表
HISTORY PointHistory (
    date,                       --生成时间
    pointYear int,              --积分年度
    point int,                  --积分数(100 or -100)
    source int,                 --积分来源
    comments char(1000) ,       --备注
    webUser ID [$user],         --客户
    sheet,                      --单据
    type,                       --不同的sheet类型
    row,                        --子表的第几行
);

BOOK PointDistributionBook (
    key pointStart int not null,
    numbers int not null, 
);

--兑换单表
SHEET PointExchangeSheet ver 0.1 (
    customer ID Customer,                   --客户编号
    webUser ID WebUser,                     --用户编号
    ARR exchangeItems (
        product ID PointProductLib not null,       --产品编号
        point int,                          --单个积分值
        quantity int not null,              --数量
        subAmount int not null,             --小计
    ),
    amount int not null,                    --总计
    shippingContact ID Contact,             --收货地址
)
Action submit {
    foreach exchangeItems {
        var leftAmount bigint;
        set leftAmount = amount;

        foreach (var mPoint int, pointYear int of
            select  (p.point - p.usedPoint) as mPoint, p.pointYear
            from    PointBook as p
            where   p.webUser = webUser and p.pointYear > YEAR(NOW()) - 3
                    and (p.point - p.usedPoint) > 0
            order by p.pointYear
        ) {
            if (leftAmount > 0){
                var p int;
                if(mPoint >= leftAmount) {
                    set p = leftAmount;
                }else{
                    set p = mPoint;
                }

                book PointBook at (webUser, pointYear) set usedPoint += p;
                history PointHistory
                    set webUser = webUser, pointYear = pointYear, point = (0-p), comments=$sheet_no, source = 3;

                set leftAmount = leftAmount - p;
                if(leftAmount <= 0){
                    break;
                }
            }
        }
    }

    if (customer > 0) {
        bus pointShopBus.pointExchangeSheet set id = $id, no = $sheet_no, customer = customer,
            shippingContact = shippingContact, amount = amount;
        var source char(8), sourceId int;
        foreach exchangeItems {
            set source = type, sourceId = sourceId from PointProductSource where pointProduct = product;
            bus pointShopBus.pointExchangeSheet into exchangeItems add product = product, source = source, sourceId = sourceId,
                quantity = quantity, point = point, subAmount = subAmount;
        }
        STATE TO Shipping;
    } else {
        STATE TO Matching;
    }
}
STATE Matching {
    ACTION Pass
    BUS webUserBus.getCuByWu as q into tb {
        set q.webUser = webUser;
    } {
        if(customer is null) {
            var customerid int;
            foreach tb {
                set customerid = customer;
            }

            bus pointShopBus.pointExchangeSheet set id = $id, no = $sheet_no, customer = customerid,
                shippingContact = shippingContact, amount = amount;
            var source char(8), sourceId int;
            foreach exchangeItems {
                set source = type, sourceId = sourceId from PointProductSource where pointProduct = product;
                bus pointShopBus.pointExchangeSheet into exchangeItems add product = product, source = source, sourceId = sourceId,
                    quantity = quantity, point = point, subAmount = subAmount;
            }
        STATE TO Shipping;
        }
    }
}
STATE Shipping {
    ACTION Cancel {
        foreach(var pointYear int, point int of 
            select p.pointYear, p.point
            from PointHistory as p
            where p.webUser = webUser and p.source = 3 and p.comments = $sheet_no
        ){
            book PointBook at (webUser, pointYear) set usedPoint -= point * -1;
            history PointHistory
                set webUser = webUser, pointYear = pointYear, point = point * -1, comments=$sheet_no, source = 4;
        } 
        STATE TO CANCELED;
    }
}
STATE CANCELED {

};

MAP CustomerCoupon (
    key webUser ID WebUser,     -- WebUser编号，不是Customer
    coupon int,
    createDate date,
    expiredDate date,
);

MAP WebUserCredits (
    key webUser ID WebUser,     -- WebUser编号，不是Customer
    key credits int not null,
    creditsCode int not null,
    createDate date,
    expiredDate date,
) ON ADD{
    bus couponDrawedBus.creditsDrawedByWebUser set webUser = webUser, coupon = credits, createDate = createDate, expiredDate = expiredDate;
};

MAP WebUserCreditsUsed (
    key webUser ID WebUser,     -- WebUser编号，不是Customer
    key credits int not null,
    key saleOrder char(50),
    usedDate date,
);

/*
 * 有关产品的浏览量/兑换量统计
*/
BOOK PointProductHotStat (
    key pointProduct ID PointProductLib not null,
    visits int not null default 0,
    exchanges int not null default 0,
);

HISTORY PointProductVisitHistory (
    date,
    pointProduct ID PointProductLib not null,
    webUser ID [$user],
);