--可兑换产品表
MAP PointProduct (
    key product ID ProductX not null,           --产品编号
    key pack OF product.PackX not null,         --包装编号
    point int,                                  --所需积分
    startDate date,                             --生效时间
    endDate date,                               --过期时间
    imageUrl char(500),                         --产品图片
    index idx_date,
);

--积分明细表
BOOK PointBook (
    key webUser ID [$user],                 -- 是webuser
    key pointYear int not null,             -- 积分所在年度
    point int not null default 0,           -- 总有效积分
    usedPoint int default 0,                -- 消耗的积分
    totalPoint int not null default 0,      -- 总积分
    tempPoint int not null default 0,       -- 在tonva订单系统产生的临时积分（当此积分同步到内部系统，再从内部系统同步回来时，会并入totalPoint内，此积分清零)
    tempUsedPoint int not null default 0,    -- 在tonva系统消耗的临死积分（当此积分同步到内部系统，再从内部系统同步回来时，会并入usedPoint内，此积分清零)
    tempSignInPoint int not null default 0  -- 签到产生的积分，该积分和tempPoint的区别是，它是有效积分，该积分也需要同步到内部系统，从内部系统同步回来时，并入到totalPoint和point中，此积分清理
);

--积分明细（备份，当审核通过时吧这个积分记录复制到 PointBook ）
BOOK PointBookByCustomer (
    key customer ID Customer,   -- 客户编号，不是webuser
    key pointYear int not null,             -- 积分所在年度
    point int not null default 0,           -- 总有效积分
    usedPoint int default 0,                -- 消耗的积分
    totalPoint int not null default 0      -- 总积分
);

--积分变化表
HISTORY PointHistory (
    date,                       --生成时间
    pointYear int,              --积分年度
    point int,                  --积分数(100 or -100)
    source int,                 --积分来源
    comments char(1000) ,       --备注
    webUser ID [$user],         --客户
    sheet,                      --单据
    type,                       --不同的sheet类型
    row,                        --子表的第几行
);

--兑换单表
SHEET PointExchangeSheet ver 0.1 (
    customer ID Customer,                   --客户编号
    webUser ID WebUser,                     --用户编号
    ARR exchangeItems (
        product ID ProductX not null,       --产品编号
        pack OF product.PackX not null,     --包装编号
        point int,                          --单个积分值
        quantity int not null,              --数量
        subAmount int not null,             --小计
    ),
    amount int not null,                    --总计
    shippingContact ID Contact,             --收货地址
)
Action submit {
    foreach exchangeItems {
        var leftAmount bigint;
        set leftAmount = subAmount;

        foreach (var mPoint int, pointYear int of
            select  (p.point + p.tempSignInPoint - p.usedPoint - p.tempUsedPoint) as mPoint, p.pointYear
            from    PointBook as p
            where   p.webUser = webUser and p.pointYear > YEAR(NOW()) - 3
                    and (p.point + p.tempSignInPoint - p.usedPoint - p.tempUsedPoint) > 0
            order by p.pointYear
        ) {
            if (leftAmount > 0){
                var p int;
                if(mPoint >= leftAmount) {
                    set p = leftAmount;
                }else{
                    set p = mPoint;
                }

                book PointBook at (webUser, pointYear) set tempUsedPoint += p;
                history PointHistory
                    set webUser = webUser, pointYear = pointYear, point = (0-p), comments=$sheet_no;

                set leftAmount = leftAmount - p;
                if(leftAmount <= 0){
                    break;
                }
            }
        }
    }

    if (customer > 0) {
        bus pointShopBus.pointExchangeSheet set id = $id, no = $sheet_no, customer = customer,
            shippingContact = shippingContact, amount = amount;
        foreach exchangeItems {
            bus pointShopBus.pointExchangeSheet into exchangeItems add product = product, pack = pack,
                quantity = quantity, point = point, subAmount = subAmount;
        }
        STATE TO END;
    } else {
        STATE TO Matching;
    }
}
STATE Matching {
    ACTION Pass
    BUS webUserBus.getCustomerByWebUser as q into tb {
        set q.webUser = webUser;
    } {
        if(customer is null) {
            var customerid int;
            foreach tb {
                set customerid = customer;
            }

            bus pointShopBus.pointExchangeSheet set id = $id, no = $sheet_no, customer = customerid,
                shippingContact = shippingContact, amount = amount;
            foreach exchangeItems {
                bus pointShopBus.pointExchangeSheet into exchangeItems add product = product, pack = pack,
                    quantity = quantity, point = point, subAmount = subAmount;
            }
        }
    }
};

-- 平台订单表
PENDING PlatformOrderPending (
    id,
    customer ID Customer not null,          --客户编号
    orderId char(100),                      --平台单号
    amount dec(12,2),                       --合同总额
    currency ID Currency,                   --币种
    date,
);
 
MAP PlatformOrder (
    key orderItemId char(50),
    orderId char(50),
    customer ID BuyerAccount not null,
    orderMaker ID Customer,
    platformOrderId char(50),
    description char(1000),
    descriptionC char(1000),
    radiox dec(12, 2),
    radioy dec(12, 4),
    unit char(10),
    quantity int,
    price dec(12, 2),
    subAmount dec(12, 2),
    amount dec(12, 2),
    currency ID Currency,
    mark char(10),
    createDate datetime,
    index idx_ordermaker,
);

 
MAP PlatformOrderUsed (
    key orderItemId char(50),
    orderId char(50),
    customer ID Customer not null,
    platformOrderId char(50),
    subAmount dec(12, 2),
    amount dec(12, 2),
    currency ID Currency,
    coupon int,
);
 

MAP PointShopOrder (
    key orderItemId char(50),
    orderId char(50),
    customer ID BuyerAccount not null,
    orderMaker ID Customer,
    description char(1000),
    descriptionC char(1000),
    radiox dec(12, 2),
    radioy dec(12, 4),
    unit char(10),
    quantity int,
    price dec(12, 2),
    subAmount dec(12, 2),
    amount dec(12, 2),
    currency ID Currency,
    mark char(10),
    createDate datetime,
);

MAP CustomerCoupon (
    key webUser ID WebUser,     -- WebUser编号，不是Customer
    coupon int,
    createDate date,
    expiredDate date,
);

MAP WebUserCredits (
    key webUser ID WebUser,     -- WebUser编号，不是Customer
    key credits int not null,
    creditsCode int not null,
    createDate date,
    expiredDate date,
);

MAP WebUserCreditsUsed (
    key webUser ID WebUser,     -- WebUser编号，不是Customer
    key credits int not null,
    key saleOrder char(50),
    usedDate date,
);