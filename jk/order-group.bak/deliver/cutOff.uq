/* 截单表 */
ID CutOffMain (
	id,
	KEY no,
	warehouse ID,
	cutter ID,		-- 截单人
	sys(create)
);

IX IxWarehouseCutOffMain(
	ix Warehouse,
	xi CutOffMain,
);

IDX DxCutOffMain (
	id,										-- CutOffMain id
	staff ID,								-- 理货人
	startTime TIMESTAMP,
	finishTime TIMESTAMP
);

/* 查询待截单数据 */
QUERY GetReadyCutOffList(
    warehouse ID
)
RETURNS list (
    orderDetail ID,
	product ID,
	item ID,
	shouldQuantity DEC(12,2),
    customer ID
) {
	INTO list SELECT a.xi as orderDetail,
		b.product, b.item, b.quantity as shouldQuantity,
        a.ix as customer
		FROM IxPendingDeliver as a
             JOIN OrderDetail as b ON a.xi=b.id
             JOIN IxUserWarehouse as c on c.ix=$user AND c.xi=a.ixx
             JOIN OrderMain as d ON b.main=d.id
        WHERE a.ixx=warehouse
        ORDER BY a.ixx, a.ix, d.contact, a.xi;
};

/* 查询库房已截单列表 */
QUERY GetCutOffMainList(
	warehouse ID
)
RETURNS list (
	id ID,
	no CHAR(20)
) {
	INTO list SELECT a.id, a.no
		FROM CutOffMain AS a
		WHERE a.warehouse=warehouse AND a.cutter=$user
		ORDER BY a.id DESC;
};

/*查询待理货列表*/
QUERY WarehouseCutOffMain (
)
RETURNS ret (
	warehouse ID,
	cutOffMain ID,
	no CHAR(20),
	cutter ID,
	create TIMESTAMP,
	staff ID,
) {
	INTO ret SELECT uw.xi as warehouse
		, b.id as cutOffMain, b.no
		, b.cutter, b.[$create] as create, c.staff
		FROM IxUserWarehouse as uw
			LEFT JOIN IxWarehouseCutOffMain as a ON uw.xi=a.ix
			JOIN CutOffMain as b ON a.xi=b.id
			LEFT JOIN DxCutOffMain as c ON b.id=c.id
		WHERE uw.ix=$user;
};

/* 截单操作
*  下一步要完善考虑根据不同业务类型的截单：例如：客户订单截单、河北质检截单...
*/
ACT CutOff(
    currentWarehouse ID
)
RETURNS main (
	id ID,
	no CHAR(20),			-- 截单号
)
{
    -- 1、操作权限检查
	IF NOT exists(SELECT ix FROM IxUserWarehouse WHERE ix=$user AND xi=currentWarehouse) {
		RETURN;
	}

    -- 2、生成截单号
    VAR cutOffMain ID, cutOffMainNo CHAR(20);
	SET cutOffMainNo=NO(CutOffMain);
	SET cutOffMain=ID(CutOffMain new, cutOffMainNo);
	WITH CutOffMain as a ID=cutOffMain SET a.no=cutOffMainNo, a.warehouse=currentWarehouse, a.cutter=$user;

    -- 3、生成发运单、临时理货号, 并删除已截单的数据
    LOG 'CutOff' SUBJECT 'start';
	TABLE tblCutOff(key warehouse ID, key customer ID, key contact ID, deliver ID);
	VAR trayNumber int;
    SET trayNumber=1;

	WHILE 1=1 {
        -- 循环获取 limit1数据
		VAR warehouse ID, customer ID, contact ID, orderDetail ID;
		SET warehouse=NULL;
		SET warehouse=a.ixx, customer=a.ix, contact=d.contact, orderDetail=a.xi
			FROM IxPendingDeliver as a
                 JOIN IxUserWarehouse as b on b.ix=$user AND b.xi=a.ixx
                 JOIN OrderDetail as c ON c.id=a.xi
                 JOIN OrderMain as d ON d.id=c.main
            WHERE a.ixx=currentWarehouse
			ORDER BY a.ixx, a.ix, d.contact, a.xi
			LIMIT 1;
		IF warehouse IS NULL {
			BREAK;
		}
        -- 从任务表中删除已获取到的当前数据
		DELETE a FROM IxPendingDeliver as a
                 JOIN IxUserWarehouse as b on b.ix=$user AND b.xi=a.ixx
                 JOIN OrderDetail as c ON c.id=a.xi
                 JOIN OrderMain as d ON d.id=c.main
			WHERE a.ixx=warehouse AND a.ix=customer AND d.contact=contact AND a.xi=orderDetail;

        -- 从临时表中查询是否存在，不存在则生成新发运单和临时理货号
		VAR deliver ID, deliverNo CHAR(20);
		SET deliver=NULL;
		SET deliver=a.deliver FROM tblCutOff as a 
			WHERE a.warehouse=warehouse AND a.customer=customer AND a.contact=contact;

		IF deliver IS NULL {
			SET deliverNo=NO(DeliverMain);
			SET deliver=ID(DeliverMain new, deliverNo);
			WITH DeliverMain as a ID=deliver SET a.customer=customer, 
                a.contact=contact, a.warehouse=warehouse, a.cutOffMain=cutOffMain, a.trayNumber=trayNumber;
			WITH IxWarehouseDeliverMain IX=warehouse XI=deliver;
			INTO tblCutOff SELECT warehouse, customer, contact, deliver;
			-- 对于有增1的字段，必须用下一句，保证这一行在表中存在
			WITH DxDeliverMain as a ID=deliver;
			SET trayNumber=trayNumber+1;
		}
		WITH DeliverDetail ID=orderDetail SET main=deliver;
		WITH DxDeliverMain as a ID=deliver SET a.rows=a.rows + 1;
	}
	LOG 'CutOff' SUBJECT 'end';
	WITH IxWarehouseCutOffMain IX=currentWarehouse XI=cutOffMain;
    INTO main SELECT cutOffMain as id, cutOffMainNo as no;
};


QUERY GetCutOffMain(
    cutOffMain ID
)
RETURNS main (
	id Id,
	no varchar(20),
	warehouse ID,
	cutter ID,
	staff ID
)
RETURNS detail (
	delivermain ID,
	trayNumber int,
	contact ID,
	customer ID,
	carrier ID,
    waybillNumber char(50),
	deliverTime TIMESTAMP DEFAULT NULL,
	deliverDetail ID,
	item ID,
	product ID,
	tallyShould DEC(12,2),
	content text
) {
	INTO main SELECT a.id, a.no, a.warehouse, a.cutter, b.staff
		FROM CutOffMain as a
			LEFT JOIN DxCutOffMain as b ON a.id=b.id
		WHERE a.id=cutOffMain;

	INTO detail SELECT b.id as delivermain, b.trayNumber,
		b.contact, b.customer, f.carrier, f.waybillNumber, f.deliverTime,
		c.id as deliverDetail, d.item, d.product, e.deliverShould as tallyShould, g.json as content
		FROM CutOffMain as a
			JOIN DeliverMain as b on a.id=b.cutOffMain
			JOIN DeliverDetail as c on b.id=c.main
			JOIN OrderDetail as d ON c.id=d.id
			LEFT JOIN DxOrderDetail as e ON d.id=e.id
			LEFT JOIN DxDeliverMain as f on f.id=b.id
			LEFT JOIN OrderDetailX as g ON g.id=e.id
		WHERE a.id=cutOffMain;
};

ACT Tallying (
	cutOffMain ID,
) {
	WITH DxCutOffMain ID=cutOffMain SET staff=$user,startTime=$date;
};

ACT Tallied (
	cutOffMain ID,
	-- 实际理货数量
	ARR detail (
		orderDetail ID,
		quantity DEC(12,2)
	)
) {
	WITH DxCutOffMain ID=cutOffMain SET finishTime=$date;
	--WITH DxCutOffMain ID=cutOffMain DEL;
	--WITH CutOffMain ID=pickup SET finishTime=$date;
	-- BUS JkOrderBus.[pickup-done];
	--FOR detail {
	--	BUS JkOrderBus.[pickup-done] INTO detail ADD id=orderDetail, value=quantity;
	--}
};