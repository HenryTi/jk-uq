
--任务
TUID Task (
    id,
    main description char(100),
    main customer ID MyCustomer,
    main type ID TaskType,
    main biz ID BizType,

    sourceID bigint,
    sourceType char(10),
    sourceNo char(50),

    main priorty int not null,
    main deadline date, -- 要求完成时间
    main createTime date not null,
);

--任务类型
TUID TaskType (
    id,
    main name char(20),
    main description char(50),
    unique(name)
);

--任务类型
TUID JkTaskType (
    id,
    no bigint,
    main name char(20),
    main TimeLimit bigint,
    unique(name)
);

-- 内部系统的任务，年初将内部系统任务导入到Task表，讲此表作为导入的中间表使用，从bus接收的数据写入此表，
-- 手动讲此表数据写入task，现在已经不再使用了。 
TUID JkTask (
    id,
    main description char(100),
    main customer ID Customer,
    main jktype ID JkTaskType,
    main type ID TaskType,
    main biz ID BizType,
    main employee id employee,
    sourceID bigint,
    sourceType char(10),
    sourceNo char(50),
    no bigint,
    main priorty int not null,
    main deadline date null, -- 要求完成时间
    main createTime date null,
    main completeTime datetime null,
    isValid smallint default 1,
);

--业务类型
TUID BizType (
    id,
    main name char(20),
    main description char(50),
    unique(name)
);

--完结内容备选项
TUID Field (
    id,
    main name char(100),
    main json text,    --备选项
    unique(name),
);

--任务状态
TUID TaskStatus (
    id,
    main name char(20),
    unique(name),
);

-- 项目，不再使用（当初设计任务完成后，由销售讲项目号填入此表）
TUID Project (
    id,
    main name char(200),
);

-- 订单，不再使用（当初设计任务完成后，由销售将订单号填入此表）
MAP TaskOrder  (
    key task ID Task,
    key ordertype char(50),
    key orderid char(50)
);

-- 业务类型关系
-- 不再使用
MAP TaskBiz (
    key type ID TaskType,
    key biz ID BizType,
);

--业务类型关系
-- 不再使用
MAP TaskBizJKTaskType (
    key type ID TaskType,
    key biz ID BizType,
    key jktype ID JkTaskType
);

--业务类型和完结内容关系
-- 不再使用
MAP BizField (
    key task ID Task,
    key field ID Field
);

--任务状态记录
BOOK TaskBook (
    key task ID Task,
    status ID TaskStatus,
    principal ID Employee,
    remindDate  date,
);

--任务完结记录
-- 不再使用
BOOK TaskFieldBook (
    key task ID Task,
    key field ID Field,
    value bigint,
    note text
);

--任务完结产品
-- 不再使用
BOOK TaskProductBook (
    key task ID Task,
    key product ID ProductX,
    note text,
);

--任务完结产品包装
-- 不再使用
BOOK TaskProductPackBook (
    key task ID Task,
    key product ID ProductX,
    key pack OF product.PackX,
    note text,
);

--任务完结项目
-- 不再使用
BOOK TaskProjectBook (
    key task ID Task,
    key project ID Project,
    note text,
);

--任务流转记录
History TaskHistory (
    date,
    task ID Task,
    status ID TaskStatus,
    principal ID Employee,
    resultType char(5),
    result char(1000),
);
 

/** 完结任务*/
ACTION CompletionTask(
    taskid ID Task,
    resultType char(5),
    result char(1000),
    ARR fields (
        fieldName char(100),
        value text
    )
) {
    history TaskHistory
    set task=taskid, status=4, principal=$user, resultType=resultType, result=result;

    delete from TaskBook where task = taskid;

    foreach fields {
        var fieldId ID;
        tuid Field into fieldId unique(fieldName);
        book TaskFieldBook at(taskId, fieldId) set value=1, note = value;
    }
 
    var _month int, _year int, businessdate  DATE;
    set businessdate = case when DAY( NOW() ) > 20 then dateadd(month, 1,  NOW() ) else  NOW()  end;
    set _month = month(businessdate);
    set _year = year(businessdate);
    book Achievement at(now(),0,$user)set endTaskCount+=1 , month = _month, year = _year ; 
};

/** 完结任务--客户资料*/
ACTION CompletionCustomerInfoTask(
    taskid ID Task,
    resultType char(5),
    result char(1000),
    ARR fields (
        fieldName char(100),
        value text
    )
) {
    var customer ID MyCustomer;
    set customer = customer from Task where id = taskid;

    foreach fields {
        if(fieldName='name'){
            TUID MyCustomer id (customer) set name =value;
        }else if(fieldName='telephone'){
            TUID MyCustomer id (customer) set telephone =value;
        }else if(fieldName='email'){
            TUID MyCustomer id (customer) set email =value;
        }else if(fieldName='wechat'){
            TUID MyCustomer id (customer) set wechat =value;
        }else if(fieldName='teacher'){
            TUID MyCustomer id (customer) set teacher =value;
        }else if(fieldName='potential'){
            TUID MyCustomer id (customer) set potential =value;
        }else if(fieldName='research'){
            TUID MyCustomer id (customer) set research =value;
        }
    }

    history TaskHistory
    set task=taskid, status=4, principal=$user, resultType=resultType, result=result;
    delete from TaskBook where task = taskid;
};


/** 拒绝任务*/
ACTION InvalidTask(
    taskid ID Task,
    resultType char(5),
    result char(1000)
){

    history TaskHistory
    set  task=taskid, status = 3, principal = $user, resultType = resultType, result= result;

    delete from TaskBook where task = taskid;
};

/** 延期任务*/
ACTION ExtensionTask(
    taskid ID Task,
    remindDate date,
    result char(1000)
){

    history TaskHistory
    set task=taskid, status = 2, principal = $user, resultType = 'exten', result= result;
    book TaskBook at ( taskid ) set remindDate = remindDate;
};

/** 添加任务*/
ACTION AddTask(
    description char(100),
    customer ID MyCustomer,
    type ID TaskType,
    biz ID BizType,
    sourceID bigint,
    sourceType char(10),
    sourceNo char(50),
    priorty int not null,
    deadline date not null
)
RETURNS ret (
    id ID
) {
    var taskId ID;
    TUID task into taskId set
        description=description, customer=customer, type=type, biz=biz,
        sourceID=sourceID, sourceType=sourceType, sourceNo=sourceNo, priorty=priorty, deadline=deadline, createTime=$date;

    BOOK TaskBook at (taskId) set status=1, principal=$user;
    into ret select taskId as id;
};

/** 导入任务*/
ACTION ImportTask(
    task ID JkTask,
    customername char(50),
    organization ID Organization,
    organizationName char(100)
)
RETURNS ret (
    id ID,
    customer ID Customer,
    description char(100)
) {
    var id bigint, description char(100), _customer ID Customer, type ID TaskType,
            biz ID BizType, employee ID employee, priorty int, deadline date;

    set     id=a.id, description=a.description, _customer=a.customer, type=a.type,
            biz=a.biz, employee=a.employee, priorty=a.priorty, deadline=a.deadline
    from    JkTask as a
    where   a.id=task;

    var mycustomerid ID;
    set mycustomerid=mycustomer from CustomerMyCustomerMap where Customer=_customer;

    if ( mycustomerid is null ){
        --判断是否有单位，没有单位新建单位
        var mycustomerUnitid ID;
        set mycustomerUnitid=id from MyCustomerUnit where no=organization;
        if( mycustomerUnitid is null ){
            TUID MyCustomerUnit into mycustomerUnitid unique($user, organization) set
                no = organization, createTime=now(), isValid=1;
        }

        var name char(50), firstName char(50), lastName char(50), xyz char(5), gender char(5), salutation char(10), birthDay date;
        set     name=a.name, firstName=a.firstName, lastName=a.lastName, xyz=a.xyz, gender=a.gender, salutation=a.salutation, birthDay=a.birthDay
        from    Customer as a
        where   a.id = _customer;

        if(name is null){
            set name = customername;
        }

        TUID MyCustomer into mycustomerid set
            name=name, firstName=firstName, lastName=lastName, gender=gender, user=$user, unit=mycustomerUnitid,
            salutation=salutation, birthDay=birthDay, isValid=1, createTime=now();

         BOOK CustomerMyCustomerMap at ( $user, mycustomerid ) set customer=_customer ;
    }

    var taskId ID;
    TUID task into taskId set
        description=description, customer=mycustomerid, type=type, biz=biz,
        priorty=priorty, deadline=deadline, createTime=$date;

    BOOK TaskBook at (taskId) set status=1, principal=$user;
    into ret select taskId as id, _customer as customer ,description;

    TUID JkTask into id id (id) set isValid = 0;
};

/** 添加任务产品*/
ACTION CreateTaskProduct(
    taskid ID Task,
    productid ID ProductX,
    note text
){
    BOOK TaskProductBook at (taskid,productid) set note=note;
};

/** 添加任务产品包装*/
ACTION CreateTaskProductPack(
    task ID Task,
    product ID ProductX ,
    pack OF product.PackX,
    note text
){
    BOOK TaskProductPackBook at (task,product,pack) set note=note;
};


/** 添加任务项目*/
ACTION CreateTaskProject(
    taskid ID Task,
    note text
){
    var projectId ID;
    TUID Project into projectId set name=note;
    BOOK TaskProjectBook at (taskid, projectId);
};

