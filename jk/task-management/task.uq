
--任务
TUID Task (
    id,
    main description char(100),
    main customer ID MyCustomer,
    main type ID TaskType,
    main biz ID BizType,

    sourceID bigint,
    sourceType char(10),
    sourceNo char(50),

    main priorty int not null,
    main deadline date, -- 要求完成时间
    main createTime date not null,
);

--任务类型
TUID TaskType (
    id,
    main name char(20),
    main description char(50),
    unique(name)
);

--业务类型
TUID BizType (
    id,
    main name char(20),
    main description char(50),
    unique(name)
);

--完结内容备选项
TUID Field (
    id,
    main name char(100),
    main json text,    --备选项
    unique(name),
);

--任务状态
TUID TaskStatus (
    id,
    main name char(20),
    unique(name),
);

--任务状态
TUID Project (
    id,
    main name char(200),
);

--客户
TUID MyCustomer (
    id,
    user ID [$user],
    main unit ID MyCustomerUnit,
    no char(30) not null,
    main name char(50) not null,
    main firstName char(50),
    main lastName char(50),
    telephone char(20),
    gender char(5),
    birthDay date,
    email char(30),
    wechat char(20),
    teacher char(20),
    potential smallint,
    research smallint,
    salutation char(10),
    createTime datetime,
    ARR Contact (
        owner,
        id,
        type char(8) not null, -- tel,mobile,email,fax,post,address,wechat,qq etc.
        content char(50) not null,
        order smallint,
    ),
    isValid smallint not null,
    search (name, firstName, lastName),
    unique(no),
);
 
--客户
TUID MyCustomerUnit (
    id,
    user ID [$user],
    main no char(30) not null,
    main name char(50) not null,
    createTime datetime,
    ARR Contact (
        owner,
        id,
        type char(8) not null, -- tel,mobile,email,fax,post,address,wechat,qq etc.
        content char(50) not null,
        order smallint,
    ),
    isValid smallint not null,
    search (name),
    unique(no),
);


--消息
TUID Message (
    id,
    date date,
    user ID [$user],
    peer ID [$user],
    main note text,
);


TUID CouponType (
    id,
    main name char(20),
);

--优惠券
TUID Coupon (
    id,
    code bigint,
    user ID [$user],
    validitydate date,    
    discount dec(12, 2),     --折扣
    preferential dec(12, 2), --优惠额度
    customer ID MyCustomer,
    createTime datetime,
    isValid smallint
);

--业务类型关系
MAP TaskBiz (
    key type ID TaskType,
    key biz ID BizType,
);


--业务类型和完结内容关系
MAP BizField (
    key task ID Task,
    key field ID Field
);


--级别 邀请码
MAP Position (
    key user ID [$user],
    post tinyint,               -- -1：被拒绝，0：待批准，1：销售员，2：轻代理，3: 渠道经理, 90:Admin
    code bigint,
);


--层级关系树
MAP Relation (
    key parent ID [$user],
    key children ID [$user],
);
 

--优惠券订单
MAP CouponOrderMap (
    key coupon ID Coupon,
    key order ID ,
);

--我的客户和系统客户关联关系
MAP WebUserMyCustomerMap (
    key webuser ID [$user],
    key myCustomer ID MyCustomer,
);

--轻代理和客户关系
BOOK WebuserNowSalesBOOK (
    key webuser ID [$user],
    key sales ID [$user],
    validity date
);


--任务状态记录
BOOK TaskBook (
    key task ID Task,
    status ID TaskStatus,
    principal ID Employee,
    remindDate  date,
);

--任务完结记录
BOOK TaskFieldBook (
    key task ID Task,
    key field ID Field,
    value bigint,
);

--任务完结产品
BOOK TaskProductBook (
    key task ID Task,
    key product ID ProductX,
    note text,
);

--任务完结产品包装
BOOK TaskProductPackBook (
    key task ID Task,
    key product ID ProductX,
    key pack OF product.PackX,
    note text,
);

--任务完结项目
BOOK TaskProjectBook (
    key task ID Task,
    key project ID Project,
    note text,
);


--粉丝信息自定义
BOOK PeerAssignedBook(
    key user ID [$user],
    key peer ID [$user],
    Assigned char(100),
);

--销售业绩
BOOK AchievementBook(
    key user ID [$user],
    SaleVolume dec(12, 2) not null,
);

--消息
BOOK MessageBook (
    key user ID [$user],
    count bigint,
);


--任务流转记录
History TaskHistory (
    date,
    key task ID Task,
    status ID TaskStatus,
    principal ID Employee,
    resultType char(5),
    result char(1000),
);

--销售历史记录
History OrderHistory (
    date,
    key user ID [$user],
    customer ID MyCustomer,
    product ID ProductX not null,
    pack OF product.PackX not null,
    quantity int not null,
    price dec(12, 2) not null,
);

/** 完结任务*/
ACTION CompletionTask(
    taskid ID Task,
    resultType char(5),
    result char(1000),
    ARR fields (
        fieldName char(100),
        value bigint
    )
) {
    history TaskHistory of (taskid)
    set status=4, principal=$user, resultType=resultType, result=result;

    delete from TaskBook where task = taskid;

    foreach fields {
        var fieldId ID;
        tuid Field into fieldId unique(fieldName);
        book TaskFieldBook at(taskId, fieldId) set value=value;
    }
};

/** 拒绝任务*/
ACTION InvalidTask(
    taskid ID Task,
    resultType char(5),
    result char(1000)
){

    history TaskHistory of( taskid )
    set status = 3, principal = $user, resultType = resultType, result= result;

    delete from TaskBook where task = taskid;
};

/** 延期任务*/
ACTION ExtensionTask(
    taskid ID Task,
    remindDate date,
    result char(1000)
){
    
    history TaskHistory of( taskid )
    set status = 2, principal = $user, resultType = 'exten', result= result;
    book TaskBook at ( taskid ) set remindDate = remindDate;
};

/** 添加任务*/
ACTION AddTask(
    description char(100),
    customer ID MyCustomer,
    type ID TaskType,
    biz ID BizType,
    sourceID bigint,
    sourceType char(10),
    sourceNo char(50),
    priorty int not null,
    deadline date not null
)
RETURNS ret (
    id ID
) {
    var taskId ID;
    TUID task into taskId set
        description=description, customer=customer, type=type, biz=biz,
        sourceID=sourceID, sourceType=sourceType, sourceNo=sourceNo, priorty=priorty, deadline=deadline, createTime=$date;

    BOOK TaskBook at (taskId) set status=1, principal=$user;
    into ret select taskId as id;
};


/** 添加任务产品*/
ACTION CreateTaskProduct(
    taskid ID Task,
    productid ID ProductX,
    note text
){
    BOOK TaskProductBook at (taskid,productid) set note=note;
};

/** 添加任务产品*/
ACTION CreateTaskProductPack(
    taskid ID Task,
    product ID ProductX ,
    pack OF product.PackX,
    note text
){
    BOOK TaskProductPackBook at (taskid,product,pack) set note=note;
};


/** 添加任务项目*/
ACTION CreateTaskProject(
    taskid ID Task,
    note text
){
    var projectId ID;
    TUID Project into projectId set name=note;
    BOOK TaskProjectBook at (taskid, projectId);
};

/** 添加验证码*/
ACTION CreatePosition (
    invitacode bigint
)
RETURNS ret (
    succeed tinyint,
    code bigint
)
{
    var parent ID [$user];
    set parent =( select user from Position where code=invitacode );
    if parent is null {
        into ret select -1 as succeed, 0 as code; 
    }
    else{
        var code bigint;
        set code = (select user from Position where user = $user);
        if code is null {
            set code = rand() * 100000000;
            BOOK Position at ($user) set post=0, code=code;
            into ret select 1 as succeed, code as code;

            BOOK Relation at ( parent, $user );
        }
        else{
            into ret select 0 as succeed, code as code;
        }
    }
};

/** 添加客户*/
ACTION CreateMyCustomer(
    unit ID MyCustomerUnit,
    no char(30) not null,
    name char(50) not null,
    firstName char(50),
    lastName char(50),
    gender char(5),
    salutation char(10),
    birthDay date
){
    var customerId ID;
    TUID MyCustomer into customerId unique(no) set
        name=name, firstName=firstName, lastName=lastName, gender=gender, unit = unit, user = $user,
        salutation=salutation, birthDay=birthDay,isValid=1,createTime=now();
};

/** 添加客户单位*/
ACTION CreateMyCustomerUnit(
    no char(30) not null,
    name char(50) not null
){
    var customerId ID;
    TUID MyCustomerUnit into customerId unique(no) set
        name=name, createTime=now(), isValid=1, user=$user;
};


/** 修改粉丝的自定义名称*/
ACTION SavePeerAssigned(
    peer ID [$user],
    Assigned char(100)
){
    BOOK PeerAssignedBook at ( $user, peer ) set Assigned=Assigned;
};


/** 清空消息*/
ACTION UpdateNowMessage(){
    BOOK MessageBook at ( $user) set count=0;
};

/** 添加优惠码*/
ACTION CreateCoupon(
    validitydate date,
    discount dec(12, 2), 
    preferential dec(12, 2),
    customer ID [$user],
)returns ret (
    code bigint
){

    var code bigint;
    set code = rand() * 100000000;
 
    var couponId ID;
    TUID Coupon into couponId set user= $user, code=code, validitydate=validitydate, customer=customer,
    discount=discount, preferential=preferential, createTime=now(), isValid=1;
    into ret select code;
};


/** 添加客户关联关系*/
ACTION UseCoupon(
    code bigint, 
    webuser ID [$user],
    order ID
) returns ret (
    result bigint
) {
    var result bigint, validitydate datetime, isValid smallint, mycustomer ID MyCustomer, order_2 char(50), webuser_2 ID [$user], sales ID [$user], nowsales ID [$user];

    set     sales=c.user, --轻代理
            isValid=c.isValid, --是否有效
            validitydate=c.validitydate, --有效期
            mycustomer=c.customer, --MYCID
            webuser_2=wm.webuser --指定客户
    from    Coupon as c 
            join WebUserMyCustomerMap as wm on c.customer = wm.mycustomer
    where c.code = code;
 
    set order_2 = ( select co.order from CouponOrderMap as co where co.coupon = code);

    set nowsales = ( select c.sales from WebuserNowSalesBOOK as c where c.webuser = webuser); --当前轻代理

   
    if ( isValid <> 1 and validitydate > now() ) {
        set result = 2;  --无效的优惠码
    } else if ( webuser<>webuser_2) {
        set result = 3; --不是指定的客户
    } else if (not order_2 is null)  {
        set result = 4;  --已经被使用
    } else if ( not nowsales is null and nowsales <> sales )  {
        set result = 5;  --不是当前的轻代理( 有当前轻代理 和 优惠码的轻代理 不相同 )
    } else {
        set result = 1;  --正常
    };

    into ret select result;

    if( result=1){
        BOOK CouponOrderMap at ( code, order ); --添加优惠码使用记录
        BOOK WebUserMyCustomerMap at ( webuser, mycustomer ); --添加系统客户和自己客户的关联关系
        BOOK WebuserNowSalesBOOK at ( webuser, sales ) set validity = now(); --添加轻代理
    }    
};
 