OPEN TUID WebUser (
    id _,
    no bigint,
    main name char(50) null,
    main firstName char(50),
    main lastName char(50),
    main gender char(5),
    main salutation char(10),
    main organizationName char(100),
    main departmentName char(100),
    -- createTime datetime,
) ON SAVE {
    if ($user > 0) {
        if not exists(select 1 from WebUserBuyeraccount where webUser = id)
        and not exists(select 1 from WebUserCustomer where webUser = id)
        and not exists(select 1 from WebUserAuditRefuseHistory where WebUser = id)
        and not exists(select 1 from PendingAuditWebUser where webUser = id){
            BOOK PendingAuditWebUser at(id);
        }
        bus webUserBus.WebUser set id = id, no = no, name = name, firstName = firstName, lastName = lastName,
            gender = gender, salutation = salutation, organizationName = organizationName, departmentName = departmentName;
    }
};

OPEN MAP WebUserContact(
    key webUser ID WebUser,
    telephone char(50),
    mobile char(50) null,
    email char(50),
    fax char(20),
    zipCode char(20),
    wechatId char(50),
    addressString char(400),
    address ID Address,
) ON ADD {
    if ($user > 0){
        if not exists(select 1 from WebUserBuyeraccount where webUser = $user)
        and not exists(select 1 from WebUserCustomer where webUser = $user)
        and not exists(select 1 from WebUserAuditRefuseHistory where WebUser = $user)
        and not exists(select 1 from PendingAuditWebUser where webUser = $user){
            BOOK PendingAuditWebUser at($user);
        }
        bus webUserBus.WebUserContact set webUser = webUser, telephone = telephone, mobile = mobile,
            email = email, fax = fax, zipCode = zipCode, wechatId = wechatId, addressString = addressString,
            address = address;
    }
};

-- WebUser的预设地址
OPEN MAP WebUserContacts (
    key webUser ID WebUser,
    key contact ID Contact,
) ON ADD {
    if($user > 0) {
        if not exists(select 1 from WebUserBuyeraccount where webUser = $user)
        and not exists(select 1 from WebUserCustomer where webUser = $user)
        and not exists(select 1 from WebUserAuditRefuseHistory where WebUser = $user)
        and not exists(select 1 from PendingAuditWebUser where webUser = $user){
            BOOK PendingAuditWebUser at($user);
        }
        bus webUserBus.WebUserContacts set webUser = webUser, contact = contact;
    }
};

-- WebUser的默认值设置表
OPEN MAP WebUserSetting ver 0.1(
    key webUser ID WebUser,
    shippingContact ID Contact,
    invoiceContact ID Contact,
    invoiceType ID InvoiceType,
    invoiceInfo ID InvoiceInfo,
) ON ADD {
    if($user > 0){
        bus webUserBus.WebUserInvoice set webUser = webUser, invoiceType = invoiceType, invoiceInfo = invoiceInfo;
    }
};

-- WebUser的默认值设置表
OPEN MAP WebUserSettingAlter (
    key webUser ID WebUser,
    key type ID WebUserSettingType,
    contentId bigint
);

OPEN TUID WebUserSettingType (
    id,
    main description char(20),
);

/* WebUser 和 Customer的关联关系
数据来源：1.客户审核中本人CID对应的customerid；2.现在官网ClientInfo中的CID对应的customerid
*/
OPEN MAP WebUserCustomer(
    key webUser ID WebUser,
    customer ID Customer,
    priority smallint not null default 1,      -- 因为存在一个customer注册了多个webUser的情况，priority用来判断优先使用哪个账号:1为最优先使用；>1者优先级一次靠后
    index idx_unitcustomer,
);

/*
WebUser 和 采购方账号 的关联关系
数据来源：1.客户审核中的老师CID对应的customerid; 2.
*/
MAP WebUserBuyerAccount ver 0.02 (
    key webUser ID WebUser,
    key buyerAccount ID BuyerAccount,
);




/* begin WebUser审核相关的uq */
BOOK PendingAuditWebUser (
    key webUser ID WebUser,
);

TUID AuditPendingUserRefuseReason (
    id,
    main description char(30)
);

HISTORY WebUserAuditHistory(
    date,
    webUser ID WebUser,
    customer ID Customer,
    user,
);

HISTORY WebUserAuditRefuseHistory(
    date,
    webUser ID WebUser,
    reason ID AuditPendingUserRefuseReason,
    comments char(100),
    user,
);
/* end WebUser审核相关的uq */

MAP WebUserVIPCard(
    key webUser ID WebUser,
    key vipCard int not null,
    key vipCardType ID VIPCardType,
    vipCardCode int not null,
    createDate date,
    expiredDate date,
);

MAP WebUserCoupon(
    key webUser ID WebUser,
    key coupon int not null,
    key couponType ID VIPCardType,
    couponCode int not null,
    createDate date,
    expiredDate date,
);

MAP WebUserCouponUsed(
    key webUser ID WebUser,
    key coupon int not null,
    usedDate date,
);
