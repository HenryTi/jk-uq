
QUERY getPendingAuditUser()
returns ret(
    webUser ID WebUser
) {
    into ret select webUser
    from    PendingAuditWebUser;
};

ACTION applyAuditUser(
    webUser bigint
){
    if not exists(select 1 from WebUserBuyeraccount as w where w.webUser = webUser)
    and not exists(select 1 from WebUserCustomer as w where w.webUser = webUser)
    and not exists(select 1 from WebUserAuditRefuseHistory as w where w.WebUser = webUser)
    and not exists(select 1 from PendingAuditWebUser as w where w.webUser = webUser){
        BOOK PendingAuditWebUser at(webUser);
    }
};

/**/
ACTION auditPendingUser(
    id bigint,
    customerId bigint
) {
    var priority smallint;
    set priority = 1;
    if exists(select 1 from WebUserCustomer where customer = customerId)
        set priority = 2;
    book WebUserCustomer at (id) set customer = customerId, priority = priority;
    bus webUserBus.WebUserAuditPass set webUser = id, customer = customerId;
    HISTORY WebUserAuditHistory set webUser = id, customer = customerId;

    delete from PendingAuditWebUser where webUser = id;

    var name char(50),
    firstName char(50),
    lastName char(50),
    organizationName char(100),
    departmentName char(100),
    telephone char(50),
    mobile char(50),
    email char(50),
    fax char(20),
    zipCode char(20);

    set name = name, firstName = firstName, lastName = lastName, organizationName = organizationName, departmentName = departmentName
    from webUser as w
    where   w.id = id;

    set telephone = telephone, mobile = mobile, email = email, fax = fax, zipCode = zipCode
    from    WebUserContact
    where    webUser = id;
    if(email <> '')
        send email on webUserAuditPassET to email with name = firstName;
};

/**/
ACTION auditPendingUserRefuse(
    id bigint,
    reason ID AuditPendingUserRefuseReason,
    comments char(200)
) {
    HISTORY WebUserAuditRefuseHistory set webUser = id, reason = reason, comments = comments;

    delete from PendingAuditWebUser where webUser = id;

    var name char(50),
    firstName char(50),
    lastName char(50),
    organizationName char(100),
    departmentName char(100),
    telephone char(50),
    mobile char(50),
    email char(50),
    fax char(20),
    zipCode char(20);

    set name = name, firstName = firstName, lastName = lastName, organizationName = organizationName, departmentName = departmentName
    from webUser as w
    where   w.id = id;

    set telephone = telephone, mobile = mobile, email = email, fax = fax, zipCode = zipCode
    from    WebUserContact
    where    webUser = id;
    if(email <> '') {
        if(reason = 1){
            send email on webUserAuditPassET to email with name = firstName;
        }else if(reason = 2) {
            send email on webUserAuditPassET to email with name = firstName;
        } else if(reason = 3) {
            send email on webUserAuditPassET to email with name = firstName;
        } else if(reason = 4) {
            send email on webUserAuditPassET to email with name = firstName;
        } else {
            send email on webUserAuditPassET to email with name = firstName;
        }
    }
};

QUERY SearchHavingRefuseUser()
PAGE (
    id bigint desc,
    webUser ID WebUser,
    reason ID AuditPendingUserRefuseReason,
    comments char(100),
    date datetime
) {
    PAGE select p.webUser as id, p.webUser,  p.reason,  p.comments, p.date
    from    WebUserAuditRefuseHistory as p
    where   p.webUser < $pageStart
    order by p.webUser desc
    limit $pageSize;
};
 
 
QUERY SearchHavingAuditUser()
PAGE (
    id bigint desc,
    webUser ID WebUser,
    customer ID Customer,
    date datetime
){
    PAGE select p.webUser as id,  p.webUser, p.customer, p.date
    from    WebUserAuditHistory as p
    where   p.webUser < $pageStart
    order by p.webUser desc
    limit $pageSize;
};


/** 搜索优惠券使用情况 */
QUERY SearchCouponReceive( 
    coupon int
)
returns ret (
    webuser ID WebUser,
    createDate date
) {
    into ret  select  a.webUser as webuser, a.createDate
    from    WebUserCoupon as a
    where   a.coupon = coupon;
};

QUERY getWebUserByCustomer(customer int)
returns ret (
    id int,
    name char(50),
    firstName char(50),
    lastName char(50),
    organizationName char(100),
    priority smallint 
) {
    into    ret select w.id, w.name, w.firstName, w.lastName, w.organizationName, wc.priority
    from    WebUserCustomer as wc
            join WebUser as w on w.id = wc.webUser
    where   wc.customer = customer;
};


ACTION setCustomerMainWebUser(customer int, webUser int) {
    foreach(var wu int, c int of
        select webUser as wu, customer as c from WebUserCustomer as t where t.customer = customer
    ) {
        book WebUserCustomer at(wu) set customer = c, priority = 0; 
    }
    book WebUserCustomer at(webUser) set customer = customer, priority = 1; 
};